{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\Desktop\\\\Invasion\\\\frontend\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\n// App.js\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Polyline, useMapEvents } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\nimport polyline from 'polyline';\nimport L from 'leaflet';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = 'https://invasion-api.onrender.com';\nconst landingIcon = L.divIcon({\n  className: 'custom-icon',\n  html: '🛸',\n  iconSize: [32, 32],\n  iconAnchor: [16, 16]\n});\nconst alienIcon = id => L.divIcon({\n  className: 'custom-icon',\n  html: `<div style=\"font-size:20px; color:green;\">👽<div style=\"font-size:10px\">${id}</div></div>`,\n  iconSize: [32, 32],\n  iconAnchor: [16, 16]\n});\nexport default function App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [landings, setLandings] = useState([]);\n  const [aliens, setAliens] = useState([]);\n  const [localLandingIds, setLocalLandingIds] = useState([]);\n  const [placingLanding, setPlacingLanding] = useState(false);\n  const [deleteRemoteMode, setDeleteRemoteMode] = useState(false);\n  const [deleteLocalMode, setDeleteLocalMode] = useState(false);\n  const [log, setLog] = useState([]);\n  const [showLog, setShowLog] = useState(false);\n  const logEvent = msg => {\n    const time = new Date().toLocaleTimeString();\n    setLog(prev => [`${time} – ${msg}`, ...prev]);\n  };\n  const fetchLandings = async () => {\n    const res = await axios.get(`${API}/api/landings`);\n    setLandings(res.data);\n  };\n  const fetchAliens = async () => {\n    const res = await axios.get(`${API}/api/aliens`);\n    const decoded = res.data.map(a => ({\n      ...a,\n      decodedRoute: polyline.decode(a.route || '')\n    }));\n    setAliens(prev => {\n      const localAliens = prev.filter(a => a.local);\n      return [...decoded, ...localAliens];\n    });\n  };\n  useEffect(() => {\n    fetchLandings();\n    fetchAliens();\n    const interval = setInterval(() => {\n      fetchLandings();\n      fetchAliens();\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setAliens(prev => prev.map(a => {\n        const next = a.positionIdx + 1;\n        if (next < a.decodedRoute.length) {\n          return {\n            ...a,\n            positionIdx: next\n          };\n        } else if (a.local) {\n          generateNewRouteForAlien(a);\n          return {\n            ...a,\n            positionIdx: 0\n          };\n        } else {\n          return {\n            ...a,\n            positionIdx: a.decodedRoute.length - 1\n          };\n        }\n      }));\n    }, 1500);\n    return () => clearInterval(interval);\n  }, []);\n  const generateNewRouteForAlien = async alien => {\n    const lastPos = alien.decodedRoute[alien.decodedRoute.length - 1];\n    const angle = Math.random() * 360;\n    const rad = angle * (Math.PI / 180);\n    const to = [lastPos[0] + 0.05 * Math.cos(rad), lastPos[1] + 0.05 * Math.sin(rad)];\n    try {\n      const routeRes = await axios.get(`${API}/api/route`, {\n        params: {\n          fromLat: lastPos[0],\n          fromLng: lastPos[1],\n          toLat: to[0],\n          toLng: to[1]\n        }\n      });\n      const decoded = polyline.decode(routeRes.data.routes[0].geometry);\n      alien.decodedRoute = decoded;\n      alien.route = polyline.encode(decoded);\n    } catch (e) {\n      console.error(\"OSRM route error:\", e.message);\n    }\n  };\n  const ClickHandler = () => {\n    _s();\n    useMapEvents({\n      click: async e => {\n        if (placingLanding) {\n          const res = await axios.post(`${API}/api/landing`, {\n            lat: e.latlng.lat,\n            lng: e.latlng.lng\n          });\n          const newLanding = {\n            id: res.data.id,\n            lat: res.data.lat,\n            lng: res.data.lng\n          };\n          setLocalLandingIds(prev => [...prev, newLanding.id]);\n          setLandings(prev => [...prev, newLanding]);\n          logEvent(`🛸 נחיתה ${newLanding.id} נוצרה`);\n          const directions = [0, 45, 90, 135, 180, 225, 270, 315];\n          const nextAlienId = aliens.length ? Math.max(...aliens.map(a => a.id)) + 1 : 1;\n          const routes = await Promise.all(directions.map(async angle => {\n            const rad = angle * (Math.PI / 180);\n            const to = [newLanding.lat + 0.05 * Math.cos(rad), newLanding.lng + 0.05 * Math.sin(rad)];\n            const routeRes = await axios.get(`${API}/api/route`, {\n              params: {\n                fromLat: newLanding.lat,\n                fromLng: newLanding.lng,\n                toLat: to[0],\n                toLng: to[1]\n              }\n            });\n            return polyline.decode(routeRes.data.routes[0].geometry);\n          }));\n          const localAliens = routes.map((route, i) => ({\n            id: nextAlienId + i,\n            landingId: newLanding.id,\n            decodedRoute: route,\n            route: polyline.encode(route),\n            positionIdx: 0,\n            local: true\n          }));\n          setAliens(prev => [...prev, ...localAliens]);\n          setPlacingLanding(false);\n          logEvent(`👽 ${localAliens.length} חייזרים שוגרו`);\n          document.body.style.cursor = 'default';\n        } else if (deleteLocalMode || deleteRemoteMode) {\n          const clicked = landings.find(l => Math.abs(l.lat - e.latlng.lat) < 0.0005 && Math.abs(l.lng - e.latlng.lng) < 0.0005);\n          if (!clicked) return;\n          if (deleteLocalMode && localLandingIds.includes(clicked.id)) {\n            setLandings(prev => prev.filter(l => l.id !== clicked.id));\n            setAliens(prev => prev.filter(a => a.landingId !== clicked.id));\n            setLocalLandingIds(prev => prev.filter(id => id !== clicked.id));\n            logEvent(`🧹 נמחקה נחיתה ${clicked.id} מקומית`);\n          }\n          if (deleteRemoteMode) {\n            await axios.delete(`${API}/api/landing/${clicked.id}`);\n            logEvent(`⚡ נמחקה נחיתה ${clicked.id} מהשרת`);\n          }\n          setDeleteLocalMode(false);\n          setDeleteRemoteMode(false);\n          document.body.style.cursor = 'default';\n        }\n      }\n    });\n    return null;\n  };\n  _s(ClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n    return [useMapEvents];\n  });\n  const handleStartPlacing = () => {\n    setPlacingLanding(true);\n    setDeleteRemoteMode(false);\n    setDeleteLocalMode(false);\n    document.body.style.cursor = 'copy';\n    logEvent(\"🛸 מצב יצירת נחיתה הופעל\");\n  };\n  const handleDeleteLocal = () => {\n    setDeleteLocalMode(true);\n    setPlacingLanding(false);\n    setDeleteRemoteMode(false);\n    document.body.style.cursor = 'not-allowed';\n    logEvent(\"🧹 מצב מחיקה מקומית הופעל\");\n  };\n  const handleDeleteRemote = () => {\n    setDeleteRemoteMode(true);\n    setPlacingLanding(false);\n    setDeleteLocalMode(false);\n    document.body.style.cursor = 'crosshair';\n    logEvent(\"⚡ מצב מחיקה מרחוק הופעל\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      landingCount: landings.length,\n      alienCount: aliens.length,\n      onStart: handleStartPlacing,\n      onDeleteLocal: handleDeleteLocal,\n      onDeleteRemote: handleDeleteRemote,\n      log: log,\n      showLog: showLog,\n      toggleLog: () => setShowLog(!showLog)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [32.1, 34.8],\n      zoom: 12,\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ClickHandler, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 OpenStreetMap\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), landings.map(landing => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [landing.lat, landing.lng],\n        icon: landingIcon\n      }, `${landing.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this)), aliens.map(alien => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Polyline, {\n          positions: alien.decodedRoute,\n          color: \"purple\",\n          dashArray: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: alien.decodedRoute[alien.positionIdx],\n          icon: alienIcon(alien.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)]\n      }, alien.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"QoBByhrZjU9q0uu1jR8D9oSP+10=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Polyline","useMapEvents","axios","polyline","L","Navbar","jsxDEV","_jsxDEV","API","landingIcon","divIcon","className","html","iconSize","iconAnchor","alienIcon","id","App","_s2","_s","$RefreshSig$","landings","setLandings","aliens","setAliens","localLandingIds","setLocalLandingIds","placingLanding","setPlacingLanding","deleteRemoteMode","setDeleteRemoteMode","deleteLocalMode","setDeleteLocalMode","log","setLog","showLog","setShowLog","logEvent","msg","time","Date","toLocaleTimeString","prev","fetchLandings","res","get","data","fetchAliens","decoded","map","a","decodedRoute","decode","route","localAliens","filter","local","interval","setInterval","clearInterval","next","positionIdx","length","generateNewRouteForAlien","alien","lastPos","angle","Math","random","rad","PI","to","cos","sin","routeRes","params","fromLat","fromLng","toLat","toLng","routes","geometry","encode","e","console","error","message","ClickHandler","click","post","lat","latlng","lng","newLanding","directions","nextAlienId","max","Promise","all","i","landingId","document","body","style","cursor","clicked","find","l","abs","includes","delete","handleStartPlacing","handleDeleteLocal","handleDeleteRemote","children","landingCount","alienCount","onStart","onDeleteLocal","onDeleteRemote","toggleLog","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","height","width","attribution","url","landing","position","icon","Fragment","positions","color","dashArray","_c","$RefreshReg$"],"sources":["C:/Users/Amos/Desktop/Invasion/frontend/src/App.js"],"sourcesContent":["// App.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Polyline, useMapEvents } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport axios from 'axios';\r\nimport polyline from 'polyline';\r\nimport L from 'leaflet';\r\nimport Navbar from './Navbar';\r\n\r\nconst API = 'https://invasion-api.onrender.com';\r\n\r\nconst landingIcon = L.divIcon({\r\n  className: 'custom-icon',\r\n  html: '🛸',\r\n  iconSize: [32, 32],\r\n  iconAnchor: [16, 16],\r\n});\r\n\r\nconst alienIcon = (id) =>\r\n  L.divIcon({\r\n    className: 'custom-icon',\r\n    html: `<div style=\"font-size:20px; color:green;\">👽<div style=\"font-size:10px\">${id}</div></div>`,\r\n    iconSize: [32, 32],\r\n    iconAnchor: [16, 16],\r\n  });\r\n\r\nexport default function App() {\r\n  const [landings, setLandings] = useState([]);\r\n  const [aliens, setAliens] = useState([]);\r\n  const [localLandingIds, setLocalLandingIds] = useState([]);\r\n  const [placingLanding, setPlacingLanding] = useState(false);\r\n  const [deleteRemoteMode, setDeleteRemoteMode] = useState(false);\r\n  const [deleteLocalMode, setDeleteLocalMode] = useState(false);\r\n  const [log, setLog] = useState([]);\r\n  const [showLog, setShowLog] = useState(false);\r\n\r\n  const logEvent = (msg) => {\r\n    const time = new Date().toLocaleTimeString();\r\n    setLog((prev) => [`${time} – ${msg}`, ...prev]);\r\n  };\r\n\r\n  const fetchLandings = async () => {\r\n    const res = await axios.get(`${API}/api/landings`);\r\n    setLandings(res.data);\r\n  };\r\n\r\n  const fetchAliens = async () => {\r\n    const res = await axios.get(`${API}/api/aliens`);\r\n    const decoded = res.data.map((a) => ({\r\n      ...a,\r\n      decodedRoute: polyline.decode(a.route || ''),\r\n    }));\r\n    setAliens((prev) => {\r\n      const localAliens = prev.filter((a) => a.local);\r\n      return [...decoded, ...localAliens];\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchLandings();\r\n    fetchAliens();\r\n    const interval = setInterval(() => {\r\n      fetchLandings();\r\n      fetchAliens();\r\n    }, 2000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setAliens((prev) =>\r\n        prev.map((a) => {\r\n          const next = a.positionIdx + 1;\r\n          if (next < a.decodedRoute.length) {\r\n            return { ...a, positionIdx: next };\r\n          } else if (a.local) {\r\n            generateNewRouteForAlien(a);\r\n            return { ...a, positionIdx: 0 };\r\n          } else {\r\n            return { ...a, positionIdx: a.decodedRoute.length - 1 };\r\n          }\r\n        })\r\n      );\r\n    }, 1500);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const generateNewRouteForAlien = async (alien) => {\r\n    const lastPos = alien.decodedRoute[alien.decodedRoute.length - 1];\r\n    const angle = Math.random() * 360;\r\n    const rad = angle * (Math.PI / 180);\r\n    const to = [lastPos[0] + 0.05 * Math.cos(rad), lastPos[1] + 0.05 * Math.sin(rad)];\r\n    try {\r\n      const routeRes = await axios.get(`${API}/api/route`, {\r\n        params: {\r\n          fromLat: lastPos[0],\r\n          fromLng: lastPos[1],\r\n          toLat: to[0],\r\n          toLng: to[1],\r\n        },\r\n      });\r\n      const decoded = polyline.decode(routeRes.data.routes[0].geometry);\r\n      alien.decodedRoute = decoded;\r\n      alien.route = polyline.encode(decoded);\r\n    } catch (e) {\r\n      console.error(\"OSRM route error:\", e.message);\r\n    }\r\n  };\r\n\r\n  const ClickHandler = () => {\r\n    useMapEvents({\r\n      click: async (e) => {\r\n        if (placingLanding) {\r\n          const res = await axios.post(`${API}/api/landing`, {\r\n            lat: e.latlng.lat,\r\n            lng: e.latlng.lng,\r\n          });\r\n          const newLanding = {\r\n            id: res.data.id,\r\n            lat: res.data.lat,\r\n            lng: res.data.lng,\r\n          };\r\n          setLocalLandingIds((prev) => [...prev, newLanding.id]);\r\n          setLandings((prev) => [...prev, newLanding]);\r\n          logEvent(`🛸 נחיתה ${newLanding.id} נוצרה`);\r\n\r\n          const directions = [0, 45, 90, 135, 180, 225, 270, 315];\r\n          const nextAlienId = aliens.length ? Math.max(...aliens.map((a) => a.id)) + 1 : 1;\r\n\r\n          const routes = await Promise.all(\r\n            directions.map(async (angle) => {\r\n              const rad = angle * (Math.PI / 180);\r\n              const to = [\r\n                newLanding.lat + 0.05 * Math.cos(rad),\r\n                newLanding.lng + 0.05 * Math.sin(rad),\r\n              ];\r\n              const routeRes = await axios.get(`${API}/api/route`, {\r\n                params: {\r\n                  fromLat: newLanding.lat,\r\n                  fromLng: newLanding.lng,\r\n                  toLat: to[0],\r\n                  toLng: to[1],\r\n                },\r\n              });\r\n              return polyline.decode(routeRes.data.routes[0].geometry);\r\n            })\r\n          );\r\n\r\n          const localAliens = routes.map((route, i) => ({\r\n            id: nextAlienId + i,\r\n            landingId: newLanding.id,\r\n            decodedRoute: route,\r\n            route: polyline.encode(route),\r\n            positionIdx: 0,\r\n            local: true,\r\n          }));\r\n\r\n          setAliens((prev) => [...prev, ...localAliens]);\r\n          setPlacingLanding(false);\r\n          logEvent(`👽 ${localAliens.length} חייזרים שוגרו`);\r\n          document.body.style.cursor = 'default';\r\n        } else if (deleteLocalMode || deleteRemoteMode) {\r\n          const clicked = landings.find(\r\n            (l) =>\r\n              Math.abs(l.lat - e.latlng.lat) < 0.0005 &&\r\n              Math.abs(l.lng - e.latlng.lng) < 0.0005\r\n          );\r\n          if (!clicked) return;\r\n\r\n          if (deleteLocalMode && localLandingIds.includes(clicked.id)) {\r\n            setLandings((prev) => prev.filter((l) => l.id !== clicked.id));\r\n            setAliens((prev) => prev.filter((a) => a.landingId !== clicked.id));\r\n            setLocalLandingIds((prev) => prev.filter((id) => id !== clicked.id));\r\n            logEvent(`🧹 נמחקה נחיתה ${clicked.id} מקומית`);\r\n          }\r\n\r\n          if (deleteRemoteMode) {\r\n            await axios.delete(`${API}/api/landing/${clicked.id}`);\r\n            logEvent(`⚡ נמחקה נחיתה ${clicked.id} מהשרת`);\r\n          }\r\n\r\n          setDeleteLocalMode(false);\r\n          setDeleteRemoteMode(false);\r\n          document.body.style.cursor = 'default';\r\n        }\r\n      },\r\n    });\r\n    return null;\r\n  };\r\n\r\n  const handleStartPlacing = () => {\r\n    setPlacingLanding(true);\r\n    setDeleteRemoteMode(false);\r\n    setDeleteLocalMode(false);\r\n    document.body.style.cursor = 'copy';\r\n    logEvent(\"🛸 מצב יצירת נחיתה הופעל\");\r\n  };\r\n\r\n  const handleDeleteLocal = () => {\r\n    setDeleteLocalMode(true);\r\n    setPlacingLanding(false);\r\n    setDeleteRemoteMode(false);\r\n    document.body.style.cursor = 'not-allowed';\r\n    logEvent(\"🧹 מצב מחיקה מקומית הופעל\");\r\n  };\r\n\r\n  const handleDeleteRemote = () => {\r\n    setDeleteRemoteMode(true);\r\n    setPlacingLanding(false);\r\n    setDeleteLocalMode(false);\r\n    document.body.style.cursor = 'crosshair';\r\n    logEvent(\"⚡ מצב מחיקה מרחוק הופעל\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        landingCount={landings.length}\r\n        alienCount={aliens.length}\r\n        onStart={handleStartPlacing}\r\n        onDeleteLocal={handleDeleteLocal}\r\n        onDeleteRemote={handleDeleteRemote}\r\n        log={log}\r\n        showLog={showLog}\r\n        toggleLog={() => setShowLog(!showLog)}\r\n      />\r\n      <MapContainer center={[32.1, 34.8]} zoom={12} style={{ height: '100vh', width: '100%' }}>\r\n        <ClickHandler />\r\n        <TileLayer\r\n          attribution=\"&copy; OpenStreetMap\"\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {landings.map((landing) => (\r\n          <Marker\r\n            key={`${landing.id}`}\r\n            position={[landing.lat, landing.lng]}\r\n            icon={landingIcon}\r\n          />\r\n        ))}\r\n        {aliens.map((alien) => (\r\n          <React.Fragment key={alien.id}>\r\n            <Polyline positions={alien.decodedRoute} color=\"purple\" dashArray=\"3\" />\r\n            <Marker\r\n              position={alien.decodedRoute[alien.positionIdx]}\r\n              icon={alienIcon(alien.id)}\r\n            />\r\n          </React.Fragment>\r\n        ))}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}