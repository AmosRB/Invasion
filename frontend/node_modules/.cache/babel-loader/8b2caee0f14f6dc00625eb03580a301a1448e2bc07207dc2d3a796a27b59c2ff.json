{"ast":null,"code":"import axios from 'axios';\nimport polyline from 'polyline';\nconst API_BASE = \"https://invasion-api.onrender.com\";\nexport default async function getRoute(from, to) {\n  try {\n    var _res$data$routes, _res$data$routes$;\n    const res = await axios.get(`${API_BASE}/api/route?fromLat=${from[0]}&fromLng=${from[1]}&toLat=${to[0]}&toLng=${to[1]}`);\n    const routeData = (_res$data$routes = res.data.routes) === null || _res$data$routes === void 0 ? void 0 : (_res$data$routes$ = _res$data$routes[0]) === null || _res$data$routes$ === void 0 ? void 0 : _res$data$routes$.geometry;\n    if (!routeData) throw new Error(\"No route found\");\n    return polyline.decode(routeData).map(([lat, lng]) => [lat, lng]);\n  } catch (err) {\n    console.error(\"❌ getRoute failed:\", err.message);\n    return [from, to]; // fallback: straight path so the alien still moves\n  }\n}","map":{"version":3,"names":["axios","polyline","API_BASE","getRoute","from","to","_res$data$routes","_res$data$routes$","res","get","routeData","data","routes","geometry","Error","decode","map","lat","lng","err","console","error","message"],"sources":["C:/Users/Amos/Desktop/invasionAll/invasion/frontend/src/utils/getRoute.js"],"sourcesContent":["import axios from 'axios';\r\nimport polyline from 'polyline';\r\n\r\nconst API_BASE = \"https://invasion-api.onrender.com\";\r\n\r\nexport default async function getRoute(from, to) {\r\n  try {\r\n    const res = await axios.get(\r\n      `${API_BASE}/api/route?fromLat=${from[0]}&fromLng=${from[1]}&toLat=${to[0]}&toLng=${to[1]}`\r\n    );\r\n\r\n    const routeData = res.data.routes?.[0]?.geometry;\r\n    if (!routeData) throw new Error(\"No route found\");\r\n\r\n    return polyline.decode(routeData).map(([lat, lng]) => [lat, lng]);\r\n  } catch (err) {\r\n    console.error(\"❌ getRoute failed:\", err.message);\r\n    return [from, to]; // fallback: straight path so the alien still moves\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,UAAU;AAE/B,MAAMC,QAAQ,GAAG,mCAAmC;AAEpD,eAAe,eAAeC,QAAQA,CAACC,IAAI,EAAEC,EAAE,EAAE;EAC/C,IAAI;IAAA,IAAAC,gBAAA,EAAAC,iBAAA;IACF,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAG,CACzB,GAAGP,QAAQ,sBAAsBE,IAAI,CAAC,CAAC,CAAC,YAAYA,IAAI,CAAC,CAAC,CAAC,UAAUC,EAAE,CAAC,CAAC,CAAC,UAAUA,EAAE,CAAC,CAAC,CAAC,EAC3F,CAAC;IAED,MAAMK,SAAS,IAAAJ,gBAAA,GAAGE,GAAG,CAACG,IAAI,CAACC,MAAM,cAAAN,gBAAA,wBAAAC,iBAAA,GAAfD,gBAAA,CAAkB,CAAC,CAAC,cAAAC,iBAAA,uBAApBA,iBAAA,CAAsBM,QAAQ;IAChD,IAAI,CAACH,SAAS,EAAE,MAAM,IAAII,KAAK,CAAC,gBAAgB,CAAC;IAEjD,OAAOb,QAAQ,CAACc,MAAM,CAACL,SAAS,CAAC,CAACM,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,GAAG,CAAC,KAAK,CAACD,GAAG,EAAEC,GAAG,CAAC,CAAC;EACnE,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,GAAG,CAACG,OAAO,CAAC;IAChD,OAAO,CAAClB,IAAI,EAAEC,EAAE,CAAC,CAAC,CAAC;EACrB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}