{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport axios from 'axios';\nconst API_BASE = \"https://invasion-api.onrender.com\";\nexport default function InvasionSync({\n  landings,\n  aliens\n}) {\n  _s();\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (landings.length === 0 && aliens.length === 0) return;\n      const geoJSON = {\n        type: \"FeatureCollection\",\n        features: [...landings.map(l => ({\n          type: \"Feature\",\n          geometry: {\n            type: \"Point\",\n            coordinates: [l.lng, l.lat]\n          },\n          properties: {\n            type: \"landing\",\n            id: l.id,\n            locationName: l.name\n          }\n        })), ...aliens.map(a => ({\n          type: \"Feature\",\n          geometry: {\n            type: \"Point\",\n            coordinates: [a.route[a.positionIdx][1], a.route[a.positionIdx][0]]\n          },\n          properties: {\n            type: \"alien\",\n            id: a.id,\n            landingId: a.landingId,\n            alienGlobalId: a.id\n          }\n        }))]\n      };\n      axios.post(`${API_BASE}/api/update-invasion`, geoJSON);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [landings, aliens]);\n  return null;\n}\n_s(InvasionSync, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = InvasionSync;\nvar _c;\n$RefreshReg$(_c, \"InvasionSync\");","map":{"version":3,"names":["useEffect","axios","API_BASE","InvasionSync","landings","aliens","_s","interval","setInterval","length","geoJSON","type","features","map","l","geometry","coordinates","lng","lat","properties","id","locationName","name","a","route","positionIdx","landingId","alienGlobalId","post","clearInterval","_c","$RefreshReg$"],"sources":["C:/Users/Amos/Desktop/invasionAll/invasion/frontend/src/components/InvasionSync.js"],"sourcesContent":["\nimport { useEffect } from 'react';\nimport axios from 'axios';\n\nconst API_BASE = \"https://invasion-api.onrender.com\";\n\nexport default function InvasionSync({ landings, aliens }) {\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (landings.length === 0 && aliens.length === 0) return;\n\n      const geoJSON = {\n        type: \"FeatureCollection\",\n        features: [\n          ...landings.map(l => ({\n            type: \"Feature\",\n            geometry: {\n              type: \"Point\",\n              coordinates: [l.lng, l.lat],\n            },\n            properties: {\n              type: \"landing\",\n              id: l.id,\n              locationName: l.name,\n            }\n          })),\n          ...aliens.map(a => ({\n            type: \"Feature\",\n            geometry: {\n              type: \"Point\",\n              coordinates: [\n                a.route[a.positionIdx][1],\n                a.route[a.positionIdx][0]\n              ]\n            },\n            properties: {\n              type: \"alien\",\n              id: a.id,\n              landingId: a.landingId,\n              alienGlobalId: a.id\n            }\n          }))\n        ]\n      };\n\n      axios.post(`${API_BASE}/api/update-invasion`, geoJSON);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [landings, aliens]);\n\n  return null;\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,mCAAmC;AAEpD,eAAe,SAASC,YAAYA,CAAC;EAAEC,QAAQ;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACzDN,SAAS,CAAC,MAAM;IACd,MAAMO,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIJ,QAAQ,CAACK,MAAM,KAAK,CAAC,IAAIJ,MAAM,CAACI,MAAM,KAAK,CAAC,EAAE;MAElD,MAAMC,OAAO,GAAG;QACdC,IAAI,EAAE,mBAAmB;QACzBC,QAAQ,EAAE,CACR,GAAGR,QAAQ,CAACS,GAAG,CAACC,CAAC,KAAK;UACpBH,IAAI,EAAE,SAAS;UACfI,QAAQ,EAAE;YACRJ,IAAI,EAAE,OAAO;YACbK,WAAW,EAAE,CAACF,CAAC,CAACG,GAAG,EAAEH,CAAC,CAACI,GAAG;UAC5B,CAAC;UACDC,UAAU,EAAE;YACVR,IAAI,EAAE,SAAS;YACfS,EAAE,EAAEN,CAAC,CAACM,EAAE;YACRC,YAAY,EAAEP,CAAC,CAACQ;UAClB;QACF,CAAC,CAAC,CAAC,EACH,GAAGjB,MAAM,CAACQ,GAAG,CAACU,CAAC,KAAK;UAClBZ,IAAI,EAAE,SAAS;UACfI,QAAQ,EAAE;YACRJ,IAAI,EAAE,OAAO;YACbK,WAAW,EAAE,CACXO,CAAC,CAACC,KAAK,CAACD,CAAC,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC,EACzBF,CAAC,CAACC,KAAK,CAACD,CAAC,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC;UAE7B,CAAC;UACDN,UAAU,EAAE;YACVR,IAAI,EAAE,OAAO;YACbS,EAAE,EAAEG,CAAC,CAACH,EAAE;YACRM,SAAS,EAAEH,CAAC,CAACG,SAAS;YACtBC,aAAa,EAAEJ,CAAC,CAACH;UACnB;QACF,CAAC,CAAC,CAAC;MAEP,CAAC;MAEDnB,KAAK,CAAC2B,IAAI,CAAC,GAAG1B,QAAQ,sBAAsB,EAAEQ,OAAO,CAAC;IACxD,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMmB,aAAa,CAACtB,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACH,QAAQ,EAAEC,MAAM,CAAC,CAAC;EAEtB,OAAO,IAAI;AACb;AAACC,EAAA,CA9CuBH,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}