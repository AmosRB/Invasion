{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\Desktop\\\\invasionAll\\\\invasion\\\\frontend\\\\src\\\\components\\\\MapView.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Polyline, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClickHandler = ({\n  onClick\n}) => {\n  _s();\n  useMapEvents({\n    click(e) {\n      onClick(e.latlng);\n    }\n  });\n  return null;\n};\n_s(ClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c = ClickHandler;\nconst alienIcon = code => L.divIcon({\n  html: `<div style=\"font-size:20px; font-weight:bold;\">ðŸ‘½ <span style=\"font-size:14px; color:black;\">${code}</span></div>`,\n  className: 'alien-icon',\n  iconSize: [30, 30]\n});\nconst landingIcon = locationName => L.divIcon({\n  html: `<div style=\"display:flex; flex-direction:column; align-items:center;\">\n    <div style=\"font-size:24px;\">ðŸ›¸</div>\n    <div style=\"background-color:black; color:white; padding:2px 6px; border-radius:4px; font-size:12px; margin-top:2px;\">${locationName}</div>\n  </div>`,\n  className: 'landing-icon',\n  iconSize: [100, 40]\n});\nexport default function MapView({\n  center,\n  landings,\n  aliens,\n  onMapClick\n}) {\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: center,\n    zoom: 10,\n    style: {\n      height: 'calc(100vh - 50px)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClickHandler, {\n      onClick: onMapClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), landings.map(l => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [l.lat, l.lng],\n      icon: landingIcon(l.name)\n    }, l.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)), aliens.map(a => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Polyline, {\n        positions: a.route,\n        color: \"purple\",\n        dashArray: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: a.route[a.positionIdx],\n        icon: alienIcon(a.alienCode || a.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, a.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c2 = MapView;\nvar _c, _c2;\n$RefreshReg$(_c, \"ClickHandler\");\n$RefreshReg$(_c2, \"MapView\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Polyline","useMapEvents","L","jsxDEV","_jsxDEV","ClickHandler","onClick","_s","click","e","latlng","_c","alienIcon","code","divIcon","html","className","iconSize","landingIcon","locationName","MapView","center","landings","aliens","onMapClick","zoom","style","height","children","url","fileName","_jsxFileName","lineNumber","columnNumber","map","l","position","lat","lng","icon","name","id","a","Fragment","positions","route","color","dashArray","positionIdx","alienCode","_c2","$RefreshReg$"],"sources":["C:/Users/Amos/Desktop/invasionAll/invasion/frontend/src/components/MapView.js"],"sourcesContent":["\r\nimport React from 'react';\r\nimport { MapContainer, TileLayer, Marker, Polyline, useMapEvents } from 'react-leaflet';\r\nimport L from 'leaflet';\r\n\r\nconst ClickHandler = ({ onClick }) => {\r\n  useMapEvents({\r\n    click(e) {\r\n      onClick(e.latlng);\r\n    },\r\n  });\r\n  return null;\r\n};\r\n\r\nconst alienIcon = (code) => L.divIcon({\r\n  html: `<div style=\"font-size:20px; font-weight:bold;\">ðŸ‘½ <span style=\"font-size:14px; color:black;\">${code}</span></div>`,\r\n  className: 'alien-icon',\r\n  iconSize: [30, 30],\r\n});\r\n\r\nconst landingIcon = (locationName) => L.divIcon({\r\n  html: `<div style=\"display:flex; flex-direction:column; align-items:center;\">\r\n    <div style=\"font-size:24px;\">ðŸ›¸</div>\r\n    <div style=\"background-color:black; color:white; padding:2px 6px; border-radius:4px; font-size:12px; margin-top:2px;\">${locationName}</div>\r\n  </div>`,\r\n  className: 'landing-icon',\r\n  iconSize: [100, 40],\r\n});\r\n\r\nexport default function MapView({ center, landings, aliens, onMapClick }) {\r\n  return (\r\n    <MapContainer center={center} zoom={10} style={{ height: 'calc(100vh - 50px)' }}>\r\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n      <ClickHandler onClick={onMapClick} />\r\n\r\n      {landings.map((l) => (\r\n        <Marker key={l.id} position={[l.lat, l.lng]} icon={landingIcon(l.name)} />\r\n      ))}\r\n\r\n      {aliens.map((a) => (\r\n        <React.Fragment key={a.id}>\r\n          <Polyline positions={a.route} color=\"purple\" dashArray=\"3\" />\r\n          <Marker\r\n            position={a.route[a.positionIdx]}\r\n            icon={alienIcon(a.alienCode || a.id)}\r\n          />\r\n        </React.Fragment>\r\n      ))}\r\n    </MapContainer>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}