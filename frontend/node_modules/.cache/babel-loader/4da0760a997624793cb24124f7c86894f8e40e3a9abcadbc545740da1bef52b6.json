{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\Desktop\\\\Invasion\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js ◊™◊ß◊ô◊ü - ◊í◊®◊°◊î ◊õ◊ï◊ú◊ú◊™ ◊ô◊¶◊ô◊®◊™ ◊û◊°◊ú◊ï◊ú ◊ó◊ì◊© ◊ú◊ó◊ô◊ô◊ñ◊®◊ô◊ù ◊û◊ß◊ï◊û◊ô◊ô◊ù\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Polyline, useMapEvents } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\nimport polyline from 'polyline';\nimport L from 'leaflet';\nimport Navbar from './Navbar';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = 'https://invasion-api.onrender.com';\nconst landingIcon = L.divIcon({\n  className: 'custom-icon',\n  html: 'üõ∏',\n  iconSize: [32, 32],\n  iconAnchor: [16, 16]\n});\nconst alienIcon = id => L.divIcon({\n  className: 'custom-icon',\n  html: `<div style=\"font-size:20px; color:green;\">üëΩ<div style=\"font-size:10px\">${id}</div></div>`,\n  iconSize: [32, 32],\n  iconAnchor: [16, 16]\n});\nexport default function App() {\n  _s();\n  const [landings, setLandings] = useState([]);\n  const [aliens, setAliens] = useState([]);\n  const [localLandingIds, setLocalLandingIds] = useState([]);\n  const [placingLanding, setPlacingLanding] = useState(false);\n  const [deleteRemoteMode, setDeleteRemoteMode] = useState(false);\n  const [deleteLocalMode, setDeleteLocalMode] = useState(false);\n  const [log, setLog] = useState([]);\n  const [showLog, setShowLog] = useState(false);\n  const logEvent = msg => {\n    const time = new Date().toLocaleTimeString();\n    setLog(prev => [`${time} ‚Äì ${msg}`, ...prev]);\n  };\n  const fetchLandings = async () => {\n    const res = await axios.get(`${API}/api/landings`);\n    setLandings(res.data);\n  };\n  const fetchAliens = async () => {\n    const res = await axios.get(`${API}/api/aliens`);\n    const decoded = res.data.map(a => ({\n      ...a,\n      decodedRoute: polyline.decode(a.route || '')\n    }));\n    setAliens(prev => {\n      const localAliens = prev.filter(a => a.local);\n      return [...decoded, ...localAliens];\n    });\n  };\n  useEffect(() => {\n    fetchLandings();\n    fetchAliens();\n    const interval = setInterval(() => {\n      fetchLandings();\n      fetchAliens();\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setAliens(prev => prev.map(a => {\n        const next = a.positionIdx + 1;\n        if (next < a.decodedRoute.length) {\n          return {\n            ...a,\n            positionIdx: next\n          };\n        } else if (a.local) {\n          generateNewRouteForAlien(a);\n          return {\n            ...a,\n            positionIdx: 0\n          };\n        } else {\n          return {\n            ...a,\n            positionIdx: a.decodedRoute.length - 1\n          };\n        }\n      }));\n    }, 1500);\n    return () => clearInterval(interval);\n  }, []);\n  const generateNewRouteForAlien = async alien => {\n    const lastPos = alien.decodedRoute[alien.decodedRoute.length - 1];\n    const angle = Math.random() * 360;\n    const rad = angle * (Math.PI / 180);\n    const to = [lastPos[0] + 0.05 * Math.cos(rad), lastPos[1] + 0.05 * Math.sin(rad)];\n    try {\n      const routeRes = await axios.get(`${API}/api/route`, {\n        params: {\n          fromLat: lastPos[0],\n          fromLng: lastPos[1],\n          toLat: to[0],\n          toLng: to[1]\n        }\n      });\n      const decoded = polyline.decode(routeRes.data.routes[0].geometry);\n      alien.decodedRoute = decoded;\n      alien.route = polyline.encode(decoded);\n    } catch (e) {\n      console.error(\"OSRM route error:\", e.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u05D0\\u05E4\\u05DC\\u05D9\\u05E7\\u05E6\\u05D9\\u05D4 \\u05E0\\u05D8\\u05E2\\u05E0\\u05EA - \\u05D4\\u05DE\\u05E9\\u05DA \\u05DB\\u05D0\\u05DF \\u05DC\\u05E4\\u05D9 \\u05E6\\u05D5\\u05E8\\u05DA...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"QoBByhrZjU9q0uu1jR8D9oSP+10=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Polyline","useMapEvents","axios","polyline","L","Navbar","jsxDEV","_jsxDEV","API","landingIcon","divIcon","className","html","iconSize","iconAnchor","alienIcon","id","App","_s","landings","setLandings","aliens","setAliens","localLandingIds","setLocalLandingIds","placingLanding","setPlacingLanding","deleteRemoteMode","setDeleteRemoteMode","deleteLocalMode","setDeleteLocalMode","log","setLog","showLog","setShowLog","logEvent","msg","time","Date","toLocaleTimeString","prev","fetchLandings","res","get","data","fetchAliens","decoded","map","a","decodedRoute","decode","route","localAliens","filter","local","interval","setInterval","clearInterval","next","positionIdx","length","generateNewRouteForAlien","alien","lastPos","angle","Math","random","rad","PI","to","cos","sin","routeRes","params","fromLat","fromLng","toLat","toLng","routes","geometry","encode","e","console","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Amos/Desktop/Invasion/frontend/src/App.js"],"sourcesContent":["\n// App.js ◊™◊ß◊ô◊ü - ◊í◊®◊°◊î ◊õ◊ï◊ú◊ú◊™ ◊ô◊¶◊ô◊®◊™ ◊û◊°◊ú◊ï◊ú ◊ó◊ì◊© ◊ú◊ó◊ô◊ô◊ñ◊®◊ô◊ù ◊û◊ß◊ï◊û◊ô◊ô◊ù\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Polyline, useMapEvents } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\nimport polyline from 'polyline';\nimport L from 'leaflet';\nimport Navbar from './Navbar';\nimport './App.css';\n\nconst API = 'https://invasion-api.onrender.com';\n\nconst landingIcon = L.divIcon({\n  className: 'custom-icon',\n  html: 'üõ∏',\n  iconSize: [32, 32],\n  iconAnchor: [16, 16],\n});\n\nconst alienIcon = (id) =>\n  L.divIcon({\n    className: 'custom-icon',\n    html: `<div style=\"font-size:20px; color:green;\">üëΩ<div style=\"font-size:10px\">${id}</div></div>`,\n    iconSize: [32, 32],\n    iconAnchor: [16, 16],\n  });\n\nexport default function App() {\n  const [landings, setLandings] = useState([]);\n  const [aliens, setAliens] = useState([]);\n  const [localLandingIds, setLocalLandingIds] = useState([]);\n  const [placingLanding, setPlacingLanding] = useState(false);\n  const [deleteRemoteMode, setDeleteRemoteMode] = useState(false);\n  const [deleteLocalMode, setDeleteLocalMode] = useState(false);\n  const [log, setLog] = useState([]);\n  const [showLog, setShowLog] = useState(false);\n\n  const logEvent = (msg) => {\n    const time = new Date().toLocaleTimeString();\n    setLog((prev) => [`${time} ‚Äì ${msg}`, ...prev]);\n  };\n\n  const fetchLandings = async () => {\n    const res = await axios.get(`${API}/api/landings`);\n    setLandings(res.data);\n  };\n\n  const fetchAliens = async () => {\n    const res = await axios.get(`${API}/api/aliens`);\n    const decoded = res.data.map((a) => ({\n      ...a,\n      decodedRoute: polyline.decode(a.route || ''),\n    }));\n    setAliens((prev) => {\n      const localAliens = prev.filter((a) => a.local);\n      return [...decoded, ...localAliens];\n    });\n  };\n\n  useEffect(() => {\n    fetchLandings();\n    fetchAliens();\n    const interval = setInterval(() => {\n      fetchLandings();\n      fetchAliens();\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setAliens((prev) =>\n        prev.map((a) => {\n          const next = a.positionIdx + 1;\n          if (next < a.decodedRoute.length) {\n            return { ...a, positionIdx: next };\n          } else if (a.local) {\n            generateNewRouteForAlien(a);\n            return { ...a, positionIdx: 0 };\n          } else {\n            return { ...a, positionIdx: a.decodedRoute.length - 1 };\n          }\n        })\n      );\n    }, 1500);\n    return () => clearInterval(interval);\n  }, []);\n\n  const generateNewRouteForAlien = async (alien) => {\n    const lastPos = alien.decodedRoute[alien.decodedRoute.length - 1];\n    const angle = Math.random() * 360;\n    const rad = angle * (Math.PI / 180);\n    const to = [lastPos[0] + 0.05 * Math.cos(rad), lastPos[1] + 0.05 * Math.sin(rad)];\n    try {\n      const routeRes = await axios.get(`${API}/api/route`, {\n        params: {\n          fromLat: lastPos[0],\n          fromLng: lastPos[1],\n          toLat: to[0],\n          toLng: to[1],\n        },\n      });\n      const decoded = polyline.decode(routeRes.data.routes[0].geometry);\n      alien.decodedRoute = decoded;\n      alien.route = polyline.encode(decoded);\n    } catch (e) {\n      console.error(\"OSRM route error:\", e.message);\n    }\n  };\n\n  return <div>◊ê◊§◊ú◊ô◊ß◊¶◊ô◊î ◊†◊ò◊¢◊†◊™ - ◊î◊û◊©◊ö ◊õ◊ê◊ü ◊ú◊§◊ô ◊¶◊ï◊®◊ö...</div>;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}