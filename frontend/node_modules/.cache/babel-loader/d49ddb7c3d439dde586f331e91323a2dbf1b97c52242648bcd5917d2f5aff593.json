{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\Desktop\\\\Invasion\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, CircleMarker, Polyline, useMapEvents } from 'react-leaflet';\nimport axios from 'axios';\nimport * as turf from '@turf/turf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst center = [31.5, 34.8];\nconst ClickHandler = ({\n  setLanding\n}) => {\n  _s();\n  useMapEvents({\n    click(e) {\n      setLanding(e.latlng);\n    }\n  });\n  return null;\n};\n_s(ClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c = ClickHandler;\nexport default function App() {\n  _s2();\n  const [landing, setLanding] = useState(null);\n  const [aliens, setAliens] = useState([]);\n  useEffect(() => {\n    const generateAliens = async () => {\n      if (landing) {\n        const points = [];\n\n        // יצירת 10 חייזרים\n        for (let i = 0; i < 10; i++) {\n          const distance = 0.5 + Math.random() * 2; // בין 0.5 ל-2.5 ק\"מ\n          const angle = Math.random() * 360;\n\n          // שימוש ב-turf ליצירת נקודות התקדמות\n          const newPosition = turf.destination([landing.lng, landing.lat], distance, angle, {\n            units: 'kilometers'\n          }).geometry.coordinates;\n          points.push([newPosition[1], newPosition[0]]);\n        }\n        setAliens(points);\n\n        // שליחת הנתונים לשרת\n        const geoJSON = {\n          type: \"FeatureCollection\",\n          features: points.map(p => ({\n            type: \"Feature\",\n            geometry: {\n              type: \"Point\",\n              coordinates: [p[1], p[0]]\n            },\n            properties: {}\n          }))\n        };\n        await axios.post('http://localhost:5000/api/invasion', geoJSON);\n      }\n    };\n    generateAliens();\n  }, [landing]);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: center,\n    zoom: 9,\n    style: {\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClickHandler, {\n      setLanding: setLanding\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), landing && /*#__PURE__*/_jsxDEV(Marker, {\n      position: landing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this), aliens.map((point, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CircleMarker, {\n        center: point,\n        radius: 6,\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: [landing, point],\n        color: \"purple\",\n        dashArray: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"SZN1RAF6lG3jR6SkjYxsIT6qXCg=\");\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ClickHandler\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","CircleMarker","Polyline","useMapEvents","axios","turf","jsxDEV","_jsxDEV","center","ClickHandler","setLanding","_s","click","e","latlng","_c","App","_s2","landing","aliens","setAliens","generateAliens","points","i","distance","Math","random","angle","newPosition","destination","lng","lat","units","geometry","coordinates","push","geoJSON","type","features","map","p","properties","post","zoom","style","height","children","url","fileName","_jsxFileName","lineNumber","columnNumber","position","point","idx","Fragment","radius","color","positions","dashArray","_c2","$RefreshReg$"],"sources":["C:/Users/Amos/Desktop/Invasion/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, CircleMarker, Polyline, useMapEvents } from 'react-leaflet';\r\nimport axios from 'axios';\r\nimport * as turf from '@turf/turf';\r\n\r\nconst center = [31.5, 34.8];\r\n\r\nconst ClickHandler = ({ setLanding }) => {\r\n  useMapEvents({\r\n    click(e) {\r\n      setLanding(e.latlng);\r\n    },\r\n  });\r\n  return null;\r\n};\r\n\r\nexport default function App() {\r\n  const [landing, setLanding] = useState(null);\r\n  const [aliens, setAliens] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const generateAliens = async () => {\r\n      if (landing) {\r\n        const points = [];\r\n\r\n        // יצירת 10 חייזרים\r\n        for (let i = 0; i < 10; i++) {\r\n          const distance = 0.5 + Math.random() * 2; // בין 0.5 ל-2.5 ק\"מ\r\n          const angle = Math.random() * 360;\r\n\r\n          // שימוש ב-turf ליצירת נקודות התקדמות\r\n          const newPosition = turf.destination(\r\n            [landing.lng, landing.lat],\r\n            distance,\r\n            angle,\r\n            { units: 'kilometers' }\r\n          ).geometry.coordinates;\r\n\r\n          points.push([newPosition[1], newPosition[0]]);\r\n        }\r\n\r\n        setAliens(points);\r\n\r\n        // שליחת הנתונים לשרת\r\n        const geoJSON = {\r\n          type: \"FeatureCollection\",\r\n          features: points.map(p => ({\r\n            type: \"Feature\",\r\n            geometry: { type: \"Point\", coordinates: [p[1], p[0]] },\r\n            properties: {},\r\n          })),\r\n        };\r\n        await axios.post('http://localhost:5000/api/invasion', geoJSON);\r\n      }\r\n    };\r\n\r\n    generateAliens();\r\n  }, [landing]);\r\n\r\n  return (\r\n    <MapContainer center={center} zoom={9} style={{ height: '100vh' }}>\r\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n      <ClickHandler setLanding={setLanding} />\r\n      {landing && <Marker position={landing} />}\r\n      \r\n      {aliens.map((point, idx) => (\r\n        <React.Fragment key={idx}>\r\n          <CircleMarker center={point} radius={6} color=\"red\" />\r\n          <Polyline positions={[landing, point]} color=\"purple\" dashArray=\"4\" />\r\n        </React.Fragment>\r\n      ))}\r\n    </MapContainer>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}