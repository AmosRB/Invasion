{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\Desktop\\\\Invasion\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js – rewritten to await server-confirmed landings\nimport React, { useEffect, useState } from 'react';\nimport Navbar from './Navbar';\nimport MapView from './components/MapView';\nimport { getLandings, getAliens, postLanding, deleteLanding, getRoute } from './utils/api';\nimport { logEvent } from './utils/logger';\nimport polyline from 'polyline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [landings, setLandings] = useState([]);\n  const [aliens, setAliens] = useState([]);\n  const [placingLanding, setPlacingLanding] = useState(false);\n  const [deleteMode, setDeleteMode] = useState(false);\n  const [log, setLog] = useState([]);\n  const [showLog, setShowLog] = useState(false);\n  useEffect(() => {\n    refreshData();\n    const interval = setInterval(refreshData, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setAliens(prev => prev.map(a => {\n        const next = a.positionIdx + 1;\n        if (next < a.decodedRoute.length) {\n          return {\n            ...a,\n            positionIdx: next\n          };\n        } else if (a.local) {\n          generateNewRouteForAlien(a);\n          return {\n            ...a,\n            positionIdx: 0\n          };\n        } else {\n          return {\n            ...a,\n            positionIdx: a.decodedRoute.length - 1\n          };\n        }\n      }));\n    }, 1500);\n    return () => clearInterval(interval);\n  }, []);\n  const refreshData = async () => {\n    const [landingsRes, aliensRes] = await Promise.all([getLandings(), getAliens()]);\n    setLandings(landingsRes);\n    const decoded = aliensRes.map(a => ({\n      ...a,\n      decodedRoute: polyline.decode(a.route || '')\n    }));\n    setAliens(prev => {\n      const localAliens = prev.filter(a => a.local);\n      return [...decoded, ...localAliens];\n    });\n  };\n  const waitUntilLandingAppears = async (id, timeout = 5000) => {\n    const start = Date.now();\n    while (Date.now() - start < timeout) {\n      const landings = await getLandings();\n      const exists = landings.find(l => l.id === id);\n      if (exists) return exists;\n      await new Promise(res => setTimeout(res, 500));\n    }\n    throw new Error(\"Timeout waiting for landing\");\n  };\n  const generateNewRouteForAlien = async alien => {\n    const lastPos = alien.decodedRoute[alien.decodedRoute.length - 1];\n    const angle = Math.random() * 360;\n    const rad = angle * (Math.PI / 180);\n    const to = [lastPos[0] + 0.05 * Math.cos(rad), lastPos[1] + 0.05 * Math.sin(rad)];\n    try {\n      const route = await getRoute(lastPos, to);\n      const decoded = polyline.decode(route.geometry);\n      alien.decodedRoute = decoded;\n      alien.route = polyline.encode(decoded);\n    } catch (e) {\n      console.error(\"OSRM route error:\", e.message);\n    }\n  };\n  const handleMapClick = async e => {\n    if (placingLanding) {\n      const res = await postLanding(e.latlng.lat, e.latlng.lng);\n      try {\n        const confirmed = await waitUntilLandingAppears(res.id);\n        logEvent(`🛸 נחיתה ${confirmed.id} נוצרה`, setLog);\n        const directions = [0, 45, 90, 135, 180, 225, 270, 315];\n        const nextAlienId = aliens.length ? Math.max(...aliens.map(a => a.id)) + 1 : 1;\n        const routes = await Promise.all(directions.map(async angle => {\n          const rad = angle * (Math.PI / 180);\n          const to = [confirmed.lat + 0.05 * Math.cos(rad), confirmed.lng + 0.05 * Math.sin(rad)];\n          const r = await getRoute([confirmed.lat, confirmed.lng], to);\n          return polyline.decode(r.geometry);\n        }));\n        const localAliens = routes.map((route, i) => ({\n          id: nextAlienId + i,\n          landingId: confirmed.id,\n          decodedRoute: route,\n          route: polyline.encode(route),\n          positionIdx: 0,\n          local: true\n        }));\n        setAliens(prev => [...prev, ...localAliens]);\n        logEvent(`👽 ${localAliens.length} חייזרים שוגרו`, setLog);\n      } catch (err) {\n        logEvent(`❌ נחיתה נכשלה: ${res.id}`, setLog);\n      }\n      setPlacingLanding(false);\n      document.body.style.cursor = 'default';\n      refreshData();\n    } else if (deleteMode) {\n      const clicked = landings.find(l => {\n        const distance = Math.hypot(l.lat - e.latlng.lat, l.lng - e.latlng.lng);\n        return distance < 0.001;\n      });\n      if (!clicked) return;\n      await deleteLanding(clicked.id);\n      setLandings(prev => prev.filter(l => l.id !== clicked.id));\n      setAliens(prev => prev.filter(a => a.landingId !== clicked.id));\n      logEvent(`🗑️ נמחקה נחיתה ${clicked.id}`, setLog);\n      setDeleteMode(false);\n      document.body.classList.remove('delete-mode');\n      document.body.style.cursor = 'default';\n    }\n  };\n  const handleDeleteAll = async () => {\n    const ids = landings.map(l => l.id);\n    try {\n      await Promise.all(ids.map(id => deleteLanding(id)));\n      ids.forEach(id => logEvent(`🧨 נמחקה נחיתה ${id}`, setLog));\n    } catch (err) {\n      console.error(\"שגיאה במחיקת נחיתות\", err);\n    }\n    setLandings([]);\n    setAliens(prev => prev.filter(a => !ids.includes(a.landingId)));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      landingCount: landings.length,\n      alienCount: aliens.length,\n      onStart: () => {\n        setPlacingLanding(true);\n        setDeleteMode(false);\n        document.body.style.cursor = 'copy';\n        logEvent(\"🛸 מצב יצירת נחיתה הופעל\", setLog);\n      },\n      onDelete: () => {\n        setDeleteMode(true);\n        setPlacingLanding(false);\n        document.body.classList.add('delete-mode');\n        logEvent(\"🗑️ מצב מחיקה הופעל\", setLog);\n      },\n      log: log,\n      showLog: showLog,\n      toggleLog: () => setShowLog(!showLog)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteAll,\n      style: {\n        position: 'absolute',\n        top: 10,\n        right: 10,\n        zIndex: 9999\n      },\n      children: \"\\uD83E\\uDDE8 \\u05DE\\u05D7\\u05E7 \\u05D4\\u05DB\\u05DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapView, {\n      landings: landings,\n      aliens: aliens,\n      onMapClick: handleMapClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NpVkpJW7bUGf8n2pWUOc84O2WyU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","MapView","getLandings","getAliens","postLanding","deleteLanding","getRoute","logEvent","polyline","jsxDEV","_jsxDEV","App","_s","landings","setLandings","aliens","setAliens","placingLanding","setPlacingLanding","deleteMode","setDeleteMode","log","setLog","showLog","setShowLog","refreshData","interval","setInterval","clearInterval","prev","map","a","next","positionIdx","decodedRoute","length","local","generateNewRouteForAlien","landingsRes","aliensRes","Promise","all","decoded","decode","route","localAliens","filter","waitUntilLandingAppears","id","timeout","start","Date","now","exists","find","l","res","setTimeout","Error","alien","lastPos","angle","Math","random","rad","PI","to","cos","sin","geometry","encode","e","console","error","message","handleMapClick","latlng","lat","lng","confirmed","directions","nextAlienId","max","routes","r","i","landingId","err","document","body","style","cursor","clicked","distance","hypot","classList","remove","handleDeleteAll","ids","forEach","includes","children","landingCount","alienCount","onStart","onDelete","add","toggleLog","fileName","_jsxFileName","lineNumber","columnNumber","onClick","position","top","right","zIndex","onMapClick","_c","$RefreshReg$"],"sources":["C:/Users/Amos/Desktop/Invasion/frontend/src/App.js"],"sourcesContent":["// App.js – rewritten to await server-confirmed landings\nimport React, { useEffect, useState } from 'react';\nimport Navbar from './Navbar';\nimport MapView from './components/MapView';\nimport { getLandings, getAliens, postLanding, deleteLanding, getRoute } from './utils/api';\nimport { logEvent } from './utils/logger';\nimport polyline from 'polyline';\n\nexport default function App() {\n  const [landings, setLandings] = useState([]);\n  const [aliens, setAliens] = useState([]);\n  const [placingLanding, setPlacingLanding] = useState(false);\n  const [deleteMode, setDeleteMode] = useState(false);\n  const [log, setLog] = useState([]);\n  const [showLog, setShowLog] = useState(false);\n\n  useEffect(() => {\n    refreshData();\n    const interval = setInterval(refreshData, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setAliens((prev) =>\n        prev.map((a) => {\n          const next = a.positionIdx + 1;\n          if (next < a.decodedRoute.length) {\n            return { ...a, positionIdx: next };\n          } else if (a.local) {\n            generateNewRouteForAlien(a);\n            return { ...a, positionIdx: 0 };\n          } else {\n            return { ...a, positionIdx: a.decodedRoute.length - 1 };\n          }\n        })\n      );\n    }, 1500);\n    return () => clearInterval(interval);\n  }, []);\n\n  const refreshData = async () => {\n    const [landingsRes, aliensRes] = await Promise.all([getLandings(), getAliens()]);\n    setLandings(landingsRes);\n\n    const decoded = aliensRes.map((a) => ({\n      ...a,\n      decodedRoute: polyline.decode(a.route || ''),\n    }));\n    setAliens((prev) => {\n      const localAliens = prev.filter((a) => a.local);\n      return [...decoded, ...localAliens];\n    });\n  };\n\n  const waitUntilLandingAppears = async (id, timeout = 5000) => {\n    const start = Date.now();\n    while (Date.now() - start < timeout) {\n      const landings = await getLandings();\n      const exists = landings.find((l) => l.id === id);\n      if (exists) return exists;\n      await new Promise((res) => setTimeout(res, 500));\n    }\n    throw new Error(\"Timeout waiting for landing\");\n  };\n\n  const generateNewRouteForAlien = async (alien) => {\n    const lastPos = alien.decodedRoute[alien.decodedRoute.length - 1];\n    const angle = Math.random() * 360;\n    const rad = angle * (Math.PI / 180);\n    const to = [lastPos[0] + 0.05 * Math.cos(rad), lastPos[1] + 0.05 * Math.sin(rad)];\n    try {\n      const route = await getRoute(lastPos, to);\n      const decoded = polyline.decode(route.geometry);\n      alien.decodedRoute = decoded;\n      alien.route = polyline.encode(decoded);\n    } catch (e) {\n      console.error(\"OSRM route error:\", e.message);\n    }\n  };\n\n  const handleMapClick = async (e) => {\n    if (placingLanding) {\n      const res = await postLanding(e.latlng.lat, e.latlng.lng);\n      try {\n        const confirmed = await waitUntilLandingAppears(res.id);\n        logEvent(`🛸 נחיתה ${confirmed.id} נוצרה`, setLog);\n\n        const directions = [0, 45, 90, 135, 180, 225, 270, 315];\n        const nextAlienId = aliens.length ? Math.max(...aliens.map((a) => a.id)) + 1 : 1;\n\n        const routes = await Promise.all(\n          directions.map(async (angle) => {\n            const rad = angle * (Math.PI / 180);\n            const to = [\n              confirmed.lat + 0.05 * Math.cos(rad),\n              confirmed.lng + 0.05 * Math.sin(rad),\n            ];\n            const r = await getRoute([confirmed.lat, confirmed.lng], to);\n            return polyline.decode(r.geometry);\n          })\n        );\n\n        const localAliens = routes.map((route, i) => ({\n          id: nextAlienId + i,\n          landingId: confirmed.id,\n          decodedRoute: route,\n          route: polyline.encode(route),\n          positionIdx: 0,\n          local: true,\n        }));\n\n        setAliens((prev) => [...prev, ...localAliens]);\n        logEvent(`👽 ${localAliens.length} חייזרים שוגרו`, setLog);\n      } catch (err) {\n        logEvent(`❌ נחיתה נכשלה: ${res.id}`, setLog);\n      }\n\n      setPlacingLanding(false);\n      document.body.style.cursor = 'default';\n      refreshData();\n    } else if (deleteMode) {\n      const clicked = landings.find((l) => {\n        const distance = Math.hypot(l.lat - e.latlng.lat, l.lng - e.latlng.lng);\n        return distance < 0.001;\n      });\n      if (!clicked) return;\n\n      await deleteLanding(clicked.id);\n      setLandings((prev) => prev.filter((l) => l.id !== clicked.id));\n      setAliens((prev) => prev.filter((a) => a.landingId !== clicked.id));\n      logEvent(`🗑️ נמחקה נחיתה ${clicked.id}`, setLog);\n\n      setDeleteMode(false);\n      document.body.classList.remove('delete-mode');\n      document.body.style.cursor = 'default';\n    }\n  };\n\n  const handleDeleteAll = async () => {\n    const ids = landings.map((l) => l.id);\n    try {\n      await Promise.all(ids.map((id) => deleteLanding(id)));\n      ids.forEach((id) => logEvent(`🧨 נמחקה נחיתה ${id}`, setLog));\n    } catch (err) {\n      console.error(\"שגיאה במחיקת נחיתות\", err);\n    }\n    setLandings([]);\n    setAliens((prev) => prev.filter((a) => !ids.includes(a.landingId)));\n  };\n\n  return (\n    <div>\n      <Navbar\n        landingCount={landings.length}\n        alienCount={aliens.length}\n        onStart={() => {\n          setPlacingLanding(true);\n          setDeleteMode(false);\n          document.body.style.cursor = 'copy';\n          logEvent(\"🛸 מצב יצירת נחיתה הופעל\", setLog);\n        }}\n        onDelete={() => {\n          setDeleteMode(true);\n          setPlacingLanding(false);\n          document.body.classList.add('delete-mode');\n          logEvent(\"🗑️ מצב מחיקה הופעל\", setLog);\n        }}\n        log={log}\n        showLog={showLog}\n        toggleLog={() => setShowLog(!showLog)}\n      />\n      <button onClick={handleDeleteAll} style={{ position: 'absolute', top: 10, right: 10, zIndex: 9999 }}>🧨 מחק הכל</button>\n      <MapView landings={landings} aliens={aliens} onMapClick={handleMapClick} />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}