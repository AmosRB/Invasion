{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\Desktop\\\\invasionAll\\\\invasion\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport MapView from './components/MapView';\nimport AlienManager from './components/AlienManager';\nimport InvasionSync from './components/InvasionSync';\nimport getRoute from './utils/getRoute';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst center = [31.5, 34.8];\nconst getNearestTownName = async (lat, lng) => {\n  try {\n    const res = await axios.get(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`);\n    return res.data.address.town || res.data.address.city || res.data.address.village || \"Unknown\";\n  } catch {\n    return \"Unknown\";\n  }\n};\nexport default function App() {\n  _s();\n  const [landings, setLandings] = useState([]);\n  const [aliens, setAliens] = useState([]);\n  const [createMode, setCreateMode] = useState(false);\n  const [cursorStyle, setCursorStyle] = useState(\"default\");\n  const getNextAlienId = () => {\n    const ids = aliens.map(a => a.id);\n    return ids.length > 0 ? Math.max(...ids) + 1 : 1;\n  };\n  const handleMapClick = async latlng => {\n    if (!createMode) return;\n    setCreateMode(false);\n    setCursorStyle(\"default\");\n    const locationName = await getNearestTownName(latlng.lat, latlng.lng);\n    const landingId = Date.now();\n    const newLanding = {\n      id: landingId,\n      lat: latlng.lat,\n      lng: latlng.lng,\n      name: locationName\n    };\n    const directions = [0, 45, 90, 135, 180, 225, 270, 315];\n    const startId = getNextAlienId();\n    const alienPromises = directions.map(async (angle, index) => {\n      const rad = angle * Math.PI / 180;\n      const target = [latlng.lat + 0.05 * Math.cos(rad), latlng.lng + 0.05 * Math.sin(rad)];\n      const route = await getRoute([latlng.lat, latlng.lng], target);\n      return {\n        id: startId + index,\n        route,\n        positionIdx: 0,\n        landingId\n      };\n    });\n    const newAliens = await Promise.all(alienPromises);\n    setLandings(prev => [...prev, newLanding]);\n    setAliens(prev => [...prev, ...newAliens]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      cursor: cursorStyle\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onActivateCreate: () => {\n        setCreateMode(true);\n        setCursorStyle(\"crosshair\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlienManager, {\n      aliens: aliens,\n      setAliens: setAliens\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InvasionSync, {\n      landings: landings,\n      aliens: aliens\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapView, {\n      center: center,\n      landings: landings,\n      aliens: aliens,\n      onMapClick: handleMapClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UN1+xNPkWnp/qGTX9Tb09yHs7pY=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","MapView","AlienManager","InvasionSync","getRoute","axios","jsxDEV","_jsxDEV","center","getNearestTownName","lat","lng","res","get","data","address","town","city","village","App","_s","landings","setLandings","aliens","setAliens","createMode","setCreateMode","cursorStyle","setCursorStyle","getNextAlienId","ids","map","a","id","length","Math","max","handleMapClick","latlng","locationName","landingId","Date","now","newLanding","name","directions","startId","alienPromises","angle","index","rad","PI","target","cos","sin","route","positionIdx","newAliens","Promise","all","prev","style","cursor","children","onActivateCreate","fileName","_jsxFileName","lineNumber","columnNumber","onMapClick","_c","$RefreshReg$"],"sources":["C:/Users/Amos/Desktop/invasionAll/invasion/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport MapView from './components/MapView';\r\nimport AlienManager from './components/AlienManager';\r\nimport InvasionSync from './components/InvasionSync';\r\nimport getRoute from './utils/getRoute';\r\nimport axios from 'axios';\r\n\r\nconst center = [31.5, 34.8];\r\n\r\nconst getNearestTownName = async (lat, lng) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`\r\n    );\r\n    return res.data.address.town || res.data.address.city || res.data.address.village || \"Unknown\";\r\n  } catch {\r\n    return \"Unknown\";\r\n  }\r\n};\r\n\r\nexport default function App() {\r\n  const [landings, setLandings] = useState([]);\r\n  const [aliens, setAliens] = useState([]);\r\n  const [createMode, setCreateMode] = useState(false);\r\n  const [cursorStyle, setCursorStyle] = useState(\"default\");\r\n\r\n  const getNextAlienId = () => {\r\n    const ids = aliens.map(a => a.id);\r\n    return ids.length > 0 ? Math.max(...ids) + 1 : 1;\r\n  };\r\n\r\n  const handleMapClick = async (latlng) => {\r\n    if (!createMode) return;\r\n    setCreateMode(false);\r\n    setCursorStyle(\"default\");\r\n\r\n    const locationName = await getNearestTownName(latlng.lat, latlng.lng);\r\n    const landingId = Date.now();\r\n\r\n    const newLanding = {\r\n      id: landingId,\r\n      lat: latlng.lat,\r\n      lng: latlng.lng,\r\n      name: locationName\r\n    };\r\n\r\n    const directions = [0, 45, 90, 135, 180, 225, 270, 315];\r\n    const startId = getNextAlienId();\r\n    const alienPromises = directions.map(async (angle, index) => {\r\n      const rad = angle * Math.PI / 180;\r\n      const target = [\r\n        latlng.lat + 0.05 * Math.cos(rad),\r\n        latlng.lng + 0.05 * Math.sin(rad)\r\n      ];\r\n      const route = await getRoute([latlng.lat, latlng.lng], target);\r\n      return {\r\n        id: startId + index,\r\n        route,\r\n        positionIdx: 0,\r\n        landingId\r\n      };\r\n    });\r\n\r\n    const newAliens = await Promise.all(alienPromises);\r\n    setLandings(prev => [...prev, newLanding]);\r\n    setAliens(prev => [...prev, ...newAliens]);\r\n  };\r\n\r\n  return (\r\n    <div style={{ cursor: cursorStyle }}>\r\n      <Navbar onActivateCreate={() => {\r\n        setCreateMode(true);\r\n        setCursorStyle(\"crosshair\");\r\n      }} />\r\n      <AlienManager aliens={aliens} setAliens={setAliens} />\r\n      <InvasionSync landings={landings} aliens={aliens} />\r\n      <MapView\r\n        center={center}\r\n        landings={landings}\r\n        aliens={aliens}\r\n        onMapClick={handleMapClick}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}