{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\Desktop\\\\Invasion\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useEffect, useState } from 'react';\nimport Navbar from './Navbar';\nimport MapView from './components/MapView';\nimport { getLandings, getAliens, postLanding, deleteLanding, getRoute } from './utils/api';\nimport { logEvent } from './utils/logger';\nimport polyline from 'polyline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [landings, setLandings] = useState([]);\n  const [aliens, setAliens] = useState([]);\n  const [localLandingIds, setLocalLandingIds] = useState([]);\n  const [placingLanding, setPlacingLanding] = useState(false);\n  const [deleteMode, setDeleteMode] = useState(false);\n  const [log, setLog] = useState([]);\n  const [showLog, setShowLog] = useState(false);\n  useEffect(() => {\n    refreshData();\n    const interval = setInterval(refreshData, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setAliens(prev => prev.map(a => {\n        const next = a.positionIdx + 1;\n        if (next < a.decodedRoute.length) {\n          return {\n            ...a,\n            positionIdx: next\n          };\n        } else if (a.local) {\n          generateNewRouteForAlien(a);\n          return {\n            ...a,\n            positionIdx: 0\n          };\n        } else {\n          return {\n            ...a,\n            positionIdx: a.decodedRoute.length - 1\n          };\n        }\n      }));\n    }, 1500);\n    return () => clearInterval(interval);\n  }, []);\n  const refreshData = async () => {\n    const [landingsRes, aliensRes] = await Promise.all([getLandings(), getAliens()]);\n    const localOnly = landings.filter(l => localLandingIds.includes(l.id));\n    const mergedLandings = [...landingsRes, ...localOnly.filter(l => !landingsRes.some(s => s.id === l.id))];\n    setLandings(mergedLandings);\n    const decoded = aliensRes.map(a => ({\n      ...a,\n      decodedRoute: polyline.decode(a.route || '')\n    }));\n    setAliens(prev => {\n      const localAliens = prev.filter(a => a.local);\n      return [...decoded, ...localAliens];\n    });\n  };\n  const generateNewRouteForAlien = async alien => {\n    const lastPos = alien.decodedRoute[alien.decodedRoute.length - 1];\n    const angle = Math.random() * 360;\n    const rad = angle * (Math.PI / 180);\n    const to = [lastPos[0] + 0.05 * Math.cos(rad), lastPos[1] + 0.05 * Math.sin(rad)];\n    try {\n      const route = await getRoute(lastPos, to);\n      const decoded = polyline.decode(route.geometry);\n      alien.decodedRoute = decoded;\n      alien.route = polyline.encode(decoded);\n    } catch (e) {\n      console.error(\"OSRM route error:\", e.message);\n    }\n  };\n  const handleMapClick = async e => {\n    if (placingLanding) {\n      const res = await postLanding(e.latlng.lat, e.latlng.lng);\n      const newLanding = {\n        id: res.id,\n        lat: res.lat,\n        lng: res.lng\n      };\n      setLocalLandingIds(prev => [...prev, newLanding.id]);\n      setLandings(prev => [...prev, newLanding]);\n      logEvent(`🛸 נחיתה ${newLanding.id} נוצרה`, setLog);\n      const directions = [0, 45, 90, 135, 180, 225, 270, 315];\n      const nextAlienId = aliens.length ? Math.max(...aliens.map(a => a.id)) + 1 : 1;\n      const routes = await Promise.all(directions.map(async angle => {\n        const rad = angle * (Math.PI / 180);\n        const to = [newLanding.lat + 0.05 * Math.cos(rad), newLanding.lng + 0.05 * Math.sin(rad)];\n        const r = await getRoute([newLanding.lat, newLanding.lng], to);\n        return polyline.decode(r.geometry);\n      }));\n      const localAliens = routes.map((route, i) => ({\n        id: nextAlienId + i,\n        landingId: newLanding.id,\n        decodedRoute: route,\n        route: polyline.encode(route),\n        positionIdx: 0,\n        local: true\n      }));\n      setAliens(prev => [...prev, ...localAliens]);\n      setPlacingLanding(false);\n      logEvent(`👽 ${localAliens.length} חייזרים שוגרו`, setLog);\n      document.body.style.cursor = 'default';\n      setTimeout(() => refreshData(), 1500);\n    } else if (deleteMode) {\n      const clicked = landings.find(l => {\n        const distance = Math.hypot(l.lat - e.latlng.lat, l.lng - e.latlng.lng);\n        return distance < 0.001;\n      });\n      if (!clicked) return;\n      if (localLandingIds.includes(clicked.id)) {\n        setLandings(prev => prev.filter(l => l.id !== clicked.id));\n        setAliens(prev => prev.filter(a => a.landingId !== clicked.id));\n        setLocalLandingIds(prev => prev.filter(id => id !== clicked.id));\n        logEvent(`🗑️ נמחקה נחיתה ${clicked.id} מקומית`, setLog);\n      } else {\n        await deleteLanding(clicked.id);\n        setLandings(prev => prev.filter(l => l.id !== clicked.id));\n        setAliens(prev => prev.filter(a => a.landingId !== clicked.id));\n        setLocalLandingIds(prev => prev.filter(id => id !== clicked.id));\n        logEvent(`🗑️ נמחקה נחיתה ${clicked.id} מהשרת`, setLog);\n      }\n      setDeleteMode(false);\n      document.body.classList.remove('delete-mode');\n      document.body.style.cursor = 'default';\n    }\n  };\n  const handleDeleteAll = async () => {\n    const ids = landings.map(l => l.id);\n    try {\n      await Promise.all(ids.map(id => deleteLanding(id)));\n      ids.forEach(id => logEvent(`🧨 נמחקה נחיתה ${id}`, setLog));\n    } catch (err) {\n      console.error(\"שגיאה במחיקת נחיתות\", err);\n    }\n    setLandings([]);\n    setAliens(prev => prev.filter(a => !ids.includes(a.landingId)));\n    setLocalLandingIds(prev => prev.filter(id => !ids.includes(id)));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      landingCount: landings.length,\n      alienCount: aliens.length,\n      onStart: () => {\n        setPlacingLanding(true);\n        setDeleteMode(false);\n        document.body.style.cursor = 'copy';\n        logEvent(\"🛸 מצב יצירת נחיתה הופעל\", setLog);\n      },\n      onDelete: () => {\n        setDeleteMode(true);\n        setPlacingLanding(false);\n        document.body.classList.add('delete-mode');\n        logEvent(\"🗑️ מצב מחיקה הופעל\", setLog);\n      },\n      log: log,\n      showLog: showLog,\n      toggleLog: () => setShowLog(!showLog)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteAll,\n      style: {\n        position: 'absolute',\n        top: 10,\n        right: 10,\n        zIndex: 9999\n      },\n      children: \"\\uD83E\\uDDE8 \\u05DE\\u05D7\\u05E7 \\u05D4\\u05DB\\u05DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapView, {\n      landings: landings,\n      aliens: aliens,\n      onMapClick: handleMapClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XlrQRl412LN7ZBqgxOcOinxfTps=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","MapView","getLandings","getAliens","postLanding","deleteLanding","getRoute","logEvent","polyline","jsxDEV","_jsxDEV","App","_s","landings","setLandings","aliens","setAliens","localLandingIds","setLocalLandingIds","placingLanding","setPlacingLanding","deleteMode","setDeleteMode","log","setLog","showLog","setShowLog","refreshData","interval","setInterval","clearInterval","prev","map","a","next","positionIdx","decodedRoute","length","local","generateNewRouteForAlien","landingsRes","aliensRes","Promise","all","localOnly","filter","l","includes","id","mergedLandings","some","s","decoded","decode","route","localAliens","alien","lastPos","angle","Math","random","rad","PI","to","cos","sin","geometry","encode","e","console","error","message","handleMapClick","res","latlng","lat","lng","newLanding","directions","nextAlienId","max","routes","r","i","landingId","document","body","style","cursor","setTimeout","clicked","find","distance","hypot","classList","remove","handleDeleteAll","ids","forEach","err","children","landingCount","alienCount","onStart","onDelete","add","toggleLog","fileName","_jsxFileName","lineNumber","columnNumber","onClick","position","top","right","zIndex","onMapClick","_c","$RefreshReg$"],"sources":["C:/Users/Amos/Desktop/Invasion/frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useEffect, useState } from 'react';\nimport Navbar from './Navbar';\nimport MapView from './components/MapView';\nimport { getLandings, getAliens, postLanding, deleteLanding, getRoute } from './utils/api';\nimport { logEvent } from './utils/logger';\nimport polyline from 'polyline';\n\nexport default function App() {\n  const [landings, setLandings] = useState([]);\n  const [aliens, setAliens] = useState([]);\n  const [localLandingIds, setLocalLandingIds] = useState([]);\n  const [placingLanding, setPlacingLanding] = useState(false);\n  const [deleteMode, setDeleteMode] = useState(false);\n  const [log, setLog] = useState([]);\n  const [showLog, setShowLog] = useState(false);\n\n  useEffect(() => {\n    refreshData();\n    const interval = setInterval(refreshData, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setAliens((prev) =>\n        prev.map((a) => {\n          const next = a.positionIdx + 1;\n          if (next < a.decodedRoute.length) {\n            return { ...a, positionIdx: next };\n          } else if (a.local) {\n            generateNewRouteForAlien(a);\n            return { ...a, positionIdx: 0 };\n          } else {\n            return { ...a, positionIdx: a.decodedRoute.length - 1 };\n          }\n        })\n      );\n    }, 1500);\n    return () => clearInterval(interval);\n  }, []);\n\n  const refreshData = async () => {\n    const [landingsRes, aliensRes] = await Promise.all([getLandings(), getAliens()]);\n\n    const localOnly = landings.filter(l => localLandingIds.includes(l.id));\n    const mergedLandings = [...landingsRes, ...localOnly.filter(l => !landingsRes.some(s => s.id === l.id))];\n    setLandings(mergedLandings);\n\n    const decoded = aliensRes.map((a) => ({\n      ...a,\n      decodedRoute: polyline.decode(a.route || ''),\n    }));\n    setAliens((prev) => {\n      const localAliens = prev.filter((a) => a.local);\n      return [...decoded, ...localAliens];\n    });\n  };\n\n  const generateNewRouteForAlien = async (alien) => {\n    const lastPos = alien.decodedRoute[alien.decodedRoute.length - 1];\n    const angle = Math.random() * 360;\n    const rad = angle * (Math.PI / 180);\n    const to = [lastPos[0] + 0.05 * Math.cos(rad), lastPos[1] + 0.05 * Math.sin(rad)];\n    try {\n      const route = await getRoute(lastPos, to);\n      const decoded = polyline.decode(route.geometry);\n      alien.decodedRoute = decoded;\n      alien.route = polyline.encode(decoded);\n    } catch (e) {\n      console.error(\"OSRM route error:\", e.message);\n    }\n  };\n\n  const handleMapClick = async (e) => {\n    if (placingLanding) {\n      const res = await postLanding(e.latlng.lat, e.latlng.lng);\n      const newLanding = {\n        id: res.id,\n        lat: res.lat,\n        lng: res.lng,\n      };\n      setLocalLandingIds((prev) => [...prev, newLanding.id]);\n      setLandings((prev) => [...prev, newLanding]);\n      logEvent(`🛸 נחיתה ${newLanding.id} נוצרה`, setLog);\n\n      const directions = [0, 45, 90, 135, 180, 225, 270, 315];\n      const nextAlienId = aliens.length ? Math.max(...aliens.map((a) => a.id)) + 1 : 1;\n\n      const routes = await Promise.all(\n        directions.map(async (angle) => {\n          const rad = angle * (Math.PI / 180);\n          const to = [\n            newLanding.lat + 0.05 * Math.cos(rad),\n            newLanding.lng + 0.05 * Math.sin(rad),\n          ];\n          const r = await getRoute([newLanding.lat, newLanding.lng], to);\n          return polyline.decode(r.geometry);\n        })\n      );\n\n      const localAliens = routes.map((route, i) => ({\n        id: nextAlienId + i,\n        landingId: newLanding.id,\n        decodedRoute: route,\n        route: polyline.encode(route),\n        positionIdx: 0,\n        local: true,\n      }));\n\n      setAliens((prev) => [...prev, ...localAliens]);\n      setPlacingLanding(false);\n      logEvent(`👽 ${localAliens.length} חייזרים שוגרו`, setLog);\n      document.body.style.cursor = 'default';\n\n      setTimeout(() => refreshData(), 1500);\n    } else if (deleteMode) {\n      const clicked = landings.find((l) => {\n        const distance = Math.hypot(l.lat - e.latlng.lat, l.lng - e.latlng.lng);\n        return distance < 0.001;\n      });\n      if (!clicked) return;\n\n      if (localLandingIds.includes(clicked.id)) {\n        setLandings((prev) => prev.filter((l) => l.id !== clicked.id));\n        setAliens((prev) => prev.filter((a) => a.landingId !== clicked.id));\n        setLocalLandingIds((prev) => prev.filter((id) => id !== clicked.id));\n        logEvent(`🗑️ נמחקה נחיתה ${clicked.id} מקומית`, setLog);\n      } else {\n        await deleteLanding(clicked.id);\n        setLandings((prev) => prev.filter((l) => l.id !== clicked.id));\n        setAliens((prev) => prev.filter((a) => a.landingId !== clicked.id));\n        setLocalLandingIds((prev) => prev.filter((id) => id !== clicked.id));\n        logEvent(`🗑️ נמחקה נחיתה ${clicked.id} מהשרת`, setLog);\n      }\n\n      setDeleteMode(false);\n      document.body.classList.remove('delete-mode');\n      document.body.style.cursor = 'default';\n    }\n  };\n\n  const handleDeleteAll = async () => {\n    const ids = landings.map((l) => l.id);\n\n    try {\n      await Promise.all(ids.map((id) => deleteLanding(id)));\n      ids.forEach((id) => logEvent(`🧨 נמחקה נחיתה ${id}`, setLog));\n    } catch (err) {\n      console.error(\"שגיאה במחיקת נחיתות\", err);\n    }\n\n    setLandings([]);\n    setAliens((prev) => prev.filter((a) => !ids.includes(a.landingId)));\n    setLocalLandingIds((prev) => prev.filter((id) => !ids.includes(id)));\n  };\n\n  return (\n    <div>\n      <Navbar\n        landingCount={landings.length}\n        alienCount={aliens.length}\n        onStart={() => {\n          setPlacingLanding(true);\n          setDeleteMode(false);\n          document.body.style.cursor = 'copy';\n          logEvent(\"🛸 מצב יצירת נחיתה הופעל\", setLog);\n        }}\n        onDelete={() => {\n          setDeleteMode(true);\n          setPlacingLanding(false);\n          document.body.classList.add('delete-mode');\n          logEvent(\"🗑️ מצב מחיקה הופעל\", setLog);\n        }}\n        log={log}\n        showLog={showLog}\n        toggleLog={() => setShowLog(!showLog)}\n      />\n      <button onClick={handleDeleteAll} style={{ position: 'absolute', top: 10, right: 10, zIndex: 9999 }}>🧨 מחק הכל</button>\n      <MapView landings={landings} aliens={aliens} onMapClick={handleMapClick} />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}