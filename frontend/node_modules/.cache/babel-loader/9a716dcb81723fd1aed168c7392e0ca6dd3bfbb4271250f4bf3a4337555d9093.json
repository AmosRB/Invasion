{"ast":null,"code":"// קובץ App.js כולל תמיכה בחידוש נתיב לחייזרים שמגיעים לסוף\n\n// הנחה: getRoute() כבר קיימת ומחזירה נתיב (array of [lat, lng])\n// נוסיף בתוך useEffect שמטפל בתנועה את הקטע הבא:\n\nuseEffect(() => {\n  const interval = setInterval(() => {\n    setAliens(prevAliens => prevAliens.map(async alien => {\n      let newIdx = alien.positionIdx + 1;\n\n      // אם הגיע לסוף - נחדש נתיב\n      if (newIdx >= alien.route.length) {\n        const from = alien.route[alien.route.length - 1];\n        const angle = Math.random() * 360;\n        const to = [from[0] + 0.05 * Math.cos(angle * Math.PI / 180), from[1] + 0.05 * Math.sin(angle * Math.PI / 180)];\n        const newRoute = await getRoute(from, to);\n        return {\n          ...alien,\n          route: newRoute,\n          positionIdx: 0\n        };\n      }\n      return {\n        ...alien,\n        positionIdx: newIdx\n      };\n    }));\n  }, 1000);\n  return () => clearInterval(interval);\n}, []);","map":{"version":3,"names":["useEffect","interval","setInterval","setAliens","prevAliens","map","alien","newIdx","positionIdx","route","length","from","angle","Math","random","to","cos","PI","sin","newRoute","getRoute","clearInterval"],"sources":["C:/Users/Amos/Desktop/invasionAll/invasion/frontend/src/App.js"],"sourcesContent":["\r\n// קובץ App.js כולל תמיכה בחידוש נתיב לחייזרים שמגיעים לסוף\r\n\r\n// הנחה: getRoute() כבר קיימת ומחזירה נתיב (array of [lat, lng])\r\n// נוסיף בתוך useEffect שמטפל בתנועה את הקטע הבא:\r\n\r\nuseEffect(() => {\r\n  const interval = setInterval(() => {\r\n    setAliens(prevAliens =>\r\n      prevAliens.map(async alien => {\r\n        let newIdx = alien.positionIdx + 1;\r\n\r\n        // אם הגיע לסוף - נחדש נתיב\r\n        if (newIdx >= alien.route.length) {\r\n          const from = alien.route[alien.route.length - 1];\r\n          const angle = Math.random() * 360;\r\n          const to = [\r\n            from[0] + 0.05 * Math.cos(angle * Math.PI / 180),\r\n            from[1] + 0.05 * Math.sin(angle * Math.PI / 180)\r\n          ];\r\n          const newRoute = await getRoute(from, to);\r\n          return {\r\n            ...alien,\r\n            route: newRoute,\r\n            positionIdx: 0\r\n          };\r\n        }\r\n\r\n        return {\r\n          ...alien,\r\n          positionIdx: newIdx\r\n        };\r\n      })\r\n    );\r\n  }, 1000);\r\n\r\n  return () => clearInterval(interval);\r\n}, []);\r\n"],"mappings":"AACA;;AAEA;AACA;;AAEAA,SAAS,CAAC,MAAM;EACd,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;IACjCC,SAAS,CAACC,UAAU,IAClBA,UAAU,CAACC,GAAG,CAAC,MAAMC,KAAK,IAAI;MAC5B,IAAIC,MAAM,GAAGD,KAAK,CAACE,WAAW,GAAG,CAAC;;MAElC;MACA,IAAID,MAAM,IAAID,KAAK,CAACG,KAAK,CAACC,MAAM,EAAE;QAChC,MAAMC,IAAI,GAAGL,KAAK,CAACG,KAAK,CAACH,KAAK,CAACG,KAAK,CAACC,MAAM,GAAG,CAAC,CAAC;QAChD,MAAME,KAAK,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;QACjC,MAAMC,EAAE,GAAG,CACTJ,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAGE,IAAI,CAACG,GAAG,CAACJ,KAAK,GAAGC,IAAI,CAACI,EAAE,GAAG,GAAG,CAAC,EAChDN,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAGE,IAAI,CAACK,GAAG,CAACN,KAAK,GAAGC,IAAI,CAACI,EAAE,GAAG,GAAG,CAAC,CACjD;QACD,MAAME,QAAQ,GAAG,MAAMC,QAAQ,CAACT,IAAI,EAAEI,EAAE,CAAC;QACzC,OAAO;UACL,GAAGT,KAAK;UACRG,KAAK,EAAEU,QAAQ;UACfX,WAAW,EAAE;QACf,CAAC;MACH;MAEA,OAAO;QACL,GAAGF,KAAK;QACRE,WAAW,EAAED;MACf,CAAC;IACH,CAAC,CACH,CAAC;EACH,CAAC,EAAE,IAAI,CAAC;EAER,OAAO,MAAMc,aAAa,CAACpB,QAAQ,CAAC;AACtC,CAAC,EAAE,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}