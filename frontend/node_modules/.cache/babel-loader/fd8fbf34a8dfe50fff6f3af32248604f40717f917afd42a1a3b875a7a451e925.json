{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport axios from 'axios';\nconst API_BASE = \"https://invasion-api.onrender.com\";\nexport default function InvasionSync({\n  landings,\n  aliens,\n  setLandings,\n  setAliens\n}) {\n  _s();\n  // שליחה לשרת\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (landings.length === 0 && aliens.length === 0) return;\n      const geoJSON = {\n        type: \"FeatureCollection\",\n        features: [...landings.map(l => ({\n          type: \"Feature\",\n          geometry: {\n            type: \"Point\",\n            coordinates: [l.lng, l.lat]\n          },\n          properties: {\n            type: \"landing\",\n            id: l.id,\n            locationName: l.name\n          }\n        })), ...aliens.map(a => ({\n          type: \"Feature\",\n          geometry: {\n            type: \"Point\",\n            coordinates: [a.route[a.positionIdx][1], a.route[a.positionIdx][0]]\n          },\n          properties: {\n            type: \"alien\",\n            id: a.id,\n            landingId: a.landingId,\n            alienGlobalId: a.id\n          }\n        }))]\n      };\n      axios.post(`${API_BASE}/api/update-invasion`, geoJSON);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [landings, aliens]);\n\n  // קבלת נתונים מהשרת\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      try {\n        const res = await axios.get(`${API_BASE}/api/invasion`);\n        const features = res.data.features;\n        const remoteLandings = features.filter(f => {\n          var _f$properties;\n          return ((_f$properties = f.properties) === null || _f$properties === void 0 ? void 0 : _f$properties.type) === 'landing';\n        }).map(f => ({\n          id: f.properties.id,\n          lat: f.geometry.coordinates[1],\n          lng: f.geometry.coordinates[0],\n          name: f.properties.locationName || 'Unknown'\n        }));\n        const remoteAliens = features.filter(f => {\n          var _f$properties2;\n          return ((_f$properties2 = f.properties) === null || _f$properties2 === void 0 ? void 0 : _f$properties2.type) === 'alien';\n        }).map(f => ({\n          id: f.properties.id,\n          route: [[f.geometry.coordinates[1], f.geometry.coordinates[0]]],\n          positionIdx: 0,\n          landingId: f.properties.landingId\n        }));\n        setLandings(remoteLandings);\n        setAliens(remoteAliens);\n      } catch (err) {\n        console.error(\"❌ Failed to load invasion data:\", err.message);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [setLandings, setAliens]);\n  return null;\n}\n_s(InvasionSync, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n_c = InvasionSync;\nvar _c;\n$RefreshReg$(_c, \"InvasionSync\");","map":{"version":3,"names":["useEffect","axios","API_BASE","InvasionSync","landings","aliens","setLandings","setAliens","_s","interval","setInterval","length","geoJSON","type","features","map","l","geometry","coordinates","lng","lat","properties","id","locationName","name","a","route","positionIdx","landingId","alienGlobalId","post","clearInterval","res","get","data","remoteLandings","filter","f","_f$properties","remoteAliens","_f$properties2","err","console","error","message","_c","$RefreshReg$"],"sources":["C:/Users/Amos/Desktop/invasionAll/invasion/frontend/src/components/InvasionSync.js"],"sourcesContent":["\nimport { useEffect } from 'react';\nimport axios from 'axios';\n\nconst API_BASE = \"https://invasion-api.onrender.com\";\n\nexport default function InvasionSync({ landings, aliens, setLandings, setAliens }) {\n  // שליחה לשרת\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (landings.length === 0 && aliens.length === 0) return;\n\n      const geoJSON = {\n        type: \"FeatureCollection\",\n        features: [\n          ...landings.map(l => ({\n            type: \"Feature\",\n            geometry: {\n              type: \"Point\",\n              coordinates: [l.lng, l.lat],\n            },\n            properties: {\n              type: \"landing\",\n              id: l.id,\n              locationName: l.name,\n            }\n          })),\n          ...aliens.map(a => ({\n            type: \"Feature\",\n            geometry: {\n              type: \"Point\",\n              coordinates: [\n                a.route[a.positionIdx][1],\n                a.route[a.positionIdx][0]\n              ]\n            },\n            properties: {\n              type: \"alien\",\n              id: a.id,\n              landingId: a.landingId,\n              alienGlobalId: a.id\n            }\n          }))\n        ]\n      };\n\n      axios.post(`${API_BASE}/api/update-invasion`, geoJSON);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [landings, aliens]);\n\n  // קבלת נתונים מהשרת\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      try {\n        const res = await axios.get(`${API_BASE}/api/invasion`);\n        const features = res.data.features;\n        const remoteLandings = features.filter(f => f.properties?.type === 'landing').map(f => ({\n          id: f.properties.id,\n          lat: f.geometry.coordinates[1],\n          lng: f.geometry.coordinates[0],\n          name: f.properties.locationName || 'Unknown'\n        }));\n        const remoteAliens = features.filter(f => f.properties?.type === 'alien').map(f => ({\n          id: f.properties.id,\n          route: [[f.geometry.coordinates[1], f.geometry.coordinates[0]]],\n          positionIdx: 0,\n          landingId: f.properties.landingId\n        }));\n\n        setLandings(remoteLandings);\n        setAliens(remoteAliens);\n      } catch (err) {\n        console.error(\"❌ Failed to load invasion data:\", err.message);\n      }\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [setLandings, setAliens]);\n\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}