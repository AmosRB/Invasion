{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\Desktop\\\\Invasion\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, CircleMarker, Polyline, useMapEvents } from 'react-leaflet';\nimport axios from 'axios';\nimport polyline from 'polyline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst center = [31.5, 34.8];\nconst OSRM_URL = \"https://router.project-osrm.org\";\nconst getRoute = async (from, to) => {\n  const res = await axios.get(`https://router.project-osrm.org/route/v1/driving/${from[1]},${from[0]};${to[1]},${to[0]}?overview=full&geometries=polyline`, {\n    headers: {\n      \"Accept\": \"application/json\"\n    }\n  });\n  return polyline.decode(res.data.routes[0].geometry).map(coord => [coord[0], coord[1]]);\n};\nconst ClickHandler = ({\n  setLanding\n}) => {\n  _s();\n  useMapEvents({\n    click(e) {\n      setLanding(e.latlng);\n    }\n  });\n  return null;\n};\n_s(ClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c = ClickHandler;\nexport default function App() {\n  _s2();\n  const [landing, setLanding] = useState(null);\n  const [alienRoutes, setAlienRoutes] = useState([]);\n  const [alienPositions, setAlienPositions] = useState([]);\n  useEffect(() => {\n    if (!landing) return;\n    const fetchRoutes = async () => {\n      const targets = [[landing.lat + 0.2, landing.lng], [landing.lat - 0.2, landing.lng], [landing.lat, landing.lng + 0.2], [landing.lat, landing.lng - 0.2], [landing.lat + 0.15, landing.lng + 0.15], [landing.lat - 0.15, landing.lng - 0.15], [landing.lat + 0.15, landing.lng - 0.15], [landing.lat - 0.15, landing.lng + 0.15], [landing.lat + 0.3, landing.lng], [landing.lat, landing.lng + 0.3]];\n      const routes = await Promise.all(targets.map(async target => {\n        const res = await axios.get(`${OSRM_URL}/route/v1/driving/${landing.lng},${landing.lat};${target[1]},${target[0]}?overview=full&geometries=polyline`);\n        const coords = polyline.decode(res.data.routes[0].geometry);\n        return coords.map(coord => [coord[0], coord[1]]);\n      }));\n      setAlienRoutes(routes);\n      setAlienPositions(new Array(routes.length).fill(0));\n    };\n    fetchRoutes();\n  }, [landing]);\n  useEffect(() => {\n    if (alienRoutes.length === 0) return;\n    const speed = 50 / 3.6; // 50 קמ\"ש למטר לשנייה\n    const interval = setInterval(() => {\n      setAlienPositions(prev => prev.map((pos, idx) => {\n        if (pos < alienRoutes[idx].length - 1) {\n          return pos + 1;\n        }\n        return pos;\n      }));\n    }, 1000); // עדכון כל שנייה (בערך תואם למהירות 50 קמ\"ש על כבישים)\n\n    return () => clearInterval(interval);\n  }, [alienRoutes]);\n  useEffect(() => {\n    if (alienRoutes.length === 0) return;\n    const geoJSON = {\n      type: \"FeatureCollection\",\n      features: alienRoutes.map((route, idx) => ({\n        type: \"Feature\",\n        geometry: {\n          type: \"LineString\",\n          coordinates: route.map(coord => [coord[1], coord[0]])\n        },\n        properties: {\n          id: idx\n        }\n      }))\n    };\n    axios.post('http://localhost:5000/api/invasion', geoJSON);\n  }, [alienRoutes]);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: center,\n    zoom: 10,\n    style: {\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClickHandler, {\n      setLanding: setLanding\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), landing && /*#__PURE__*/_jsxDEV(Marker, {\n      position: landing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }, this), alienRoutes.map((route, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Polyline, {\n        positions: route,\n        color: \"purple\",\n        dashArray: \"5, 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), alienPositions[idx] < route.length && /*#__PURE__*/_jsxDEV(CircleMarker, {\n        center: route[alienPositions[idx]],\n        radius: 6,\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"bie1Q8BsQ8JSNkn9S7dXp3GpBU0=\");\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ClickHandler\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","CircleMarker","Polyline","useMapEvents","axios","polyline","jsxDEV","_jsxDEV","center","OSRM_URL","getRoute","from","to","res","get","headers","decode","data","routes","geometry","map","coord","ClickHandler","setLanding","_s","click","e","latlng","_c","App","_s2","landing","alienRoutes","setAlienRoutes","alienPositions","setAlienPositions","fetchRoutes","targets","lat","lng","Promise","all","target","coords","Array","length","fill","speed","interval","setInterval","prev","pos","idx","clearInterval","geoJSON","type","features","route","coordinates","properties","id","post","zoom","style","height","children","url","fileName","_jsxFileName","lineNumber","columnNumber","position","Fragment","positions","color","dashArray","radius","_c2","$RefreshReg$"],"sources":["C:/Users/Amos/Desktop/Invasion/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, CircleMarker, Polyline, useMapEvents } from 'react-leaflet';\r\nimport axios from 'axios';\r\nimport polyline from 'polyline';\r\n\r\nconst center = [31.5, 34.8];\r\nconst OSRM_URL = \"https://router.project-osrm.org\";\r\nconst getRoute = async (from, to) => {\r\n  const res = await axios.get(\r\n    `https://router.project-osrm.org/route/v1/driving/${from[1]},${from[0]};${to[1]},${to[0]}?overview=full&geometries=polyline`,\r\n    { headers: { \"Accept\": \"application/json\" } }\r\n  );\r\n  return polyline.decode(res.data.routes[0].geometry).map(coord => [coord[0], coord[1]]);\r\n};\r\n\r\nconst ClickHandler = ({ setLanding }) => {\r\n  useMapEvents({\r\n    click(e) {\r\n      setLanding(e.latlng);\r\n    },\r\n  });\r\n  return null;\r\n};\r\n\r\nexport default function App() {\r\n  const [landing, setLanding] = useState(null);\r\n  const [alienRoutes, setAlienRoutes] = useState([]);\r\n  const [alienPositions, setAlienPositions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!landing) return;\r\n\r\n    const fetchRoutes = async () => {\r\n      const targets = [\r\n        [landing.lat + 0.2, landing.lng],\r\n        [landing.lat - 0.2, landing.lng],\r\n        [landing.lat, landing.lng + 0.2],\r\n        [landing.lat, landing.lng - 0.2],\r\n        [landing.lat + 0.15, landing.lng + 0.15],\r\n        [landing.lat - 0.15, landing.lng - 0.15],\r\n        [landing.lat + 0.15, landing.lng - 0.15],\r\n        [landing.lat - 0.15, landing.lng + 0.15],\r\n        [landing.lat + 0.3, landing.lng],\r\n        [landing.lat, landing.lng + 0.3],\r\n      ];\r\n\r\n      const routes = await Promise.all(targets.map(async (target) => {\r\n        const res = await axios.get(\r\n          `${OSRM_URL}/route/v1/driving/${landing.lng},${landing.lat};${target[1]},${target[0]}?overview=full&geometries=polyline`\r\n        );\r\n        const coords = polyline.decode(res.data.routes[0].geometry);\r\n        return coords.map(coord => [coord[0], coord[1]]);\r\n      }));\r\n\r\n      setAlienRoutes(routes);\r\n      setAlienPositions(new Array(routes.length).fill(0));\r\n    };\r\n\r\n    fetchRoutes();\r\n  }, [landing]);\r\n\r\n  useEffect(() => {\r\n    if (alienRoutes.length === 0) return;\r\n\r\n    const speed = 50 / 3.6; // 50 קמ\"ש למטר לשנייה\r\n    const interval = setInterval(() => {\r\n      setAlienPositions(prev => prev.map((pos, idx) => {\r\n        if (pos < alienRoutes[idx].length - 1) {\r\n          return pos + 1;\r\n        }\r\n        return pos;\r\n      }));\r\n    }, 1000); // עדכון כל שנייה (בערך תואם למהירות 50 קמ\"ש על כבישים)\r\n\r\n    return () => clearInterval(interval);\r\n  }, [alienRoutes]);\r\n\r\n  useEffect(() => {\r\n    if (alienRoutes.length === 0) return;\r\n\r\n    const geoJSON = {\r\n      type: \"FeatureCollection\",\r\n      features: alienRoutes.map((route, idx) => ({\r\n        type: \"Feature\",\r\n        geometry: {\r\n          type: \"LineString\",\r\n          coordinates: route.map(coord => [coord[1], coord[0]])\r\n        },\r\n        properties: { id: idx },\r\n      })),\r\n    };\r\n\r\n    axios.post('http://localhost:5000/api/invasion', geoJSON);\r\n  }, [alienRoutes]);\r\n\r\n  return (\r\n    <MapContainer center={center} zoom={10} style={{ height: '100vh' }}>\r\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n      <ClickHandler setLanding={setLanding} />\r\n      {landing && <Marker position={landing} />}\r\n      \r\n      {alienRoutes.map((route, idx) => (\r\n        <React.Fragment key={idx}>\r\n          <Polyline positions={route} color=\"purple\" dashArray=\"5, 5\" />\r\n          {alienPositions[idx] < route.length && (\r\n            <CircleMarker\r\n              center={route[alienPositions[idx]]}\r\n              radius={6}\r\n              color=\"red\"\r\n            />\r\n          )}\r\n        </React.Fragment>\r\n      ))}\r\n    </MapContainer>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}