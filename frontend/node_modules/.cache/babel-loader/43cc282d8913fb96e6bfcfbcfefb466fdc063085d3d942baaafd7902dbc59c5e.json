{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\Desktop\\\\Invasion\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, CircleMarker, Polyline, useMapEvents } from 'react-leaflet';\nimport axios from 'axios';\nimport polyline from 'polyline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst center = [31.5, 34.8];\nconst OSRM_URL = \"https://router.project-osrm.org\";\nconst ClickHandler = ({\n  setLanding\n}) => {\n  _s();\n  useMapEvents({\n    click(e) {\n      setLanding(e.latlng);\n    }\n  });\n  return null;\n};\n_s(ClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c = ClickHandler;\nexport default function App() {\n  _s2();\n  const [landing, setLanding] = useState(null);\n  const [alienRoutes, setAlienRoutes] = useState([]);\n  const [alienPositions, setAlienPositions] = useState([]);\n  useEffect(() => {\n    if (!landing) return;\n    const fetchRoutes = async () => {\n      const targets = [[landing.lat + 0.2, landing.lng], [landing.lat - 0.2, landing.lng], [landing.lat, landing.lng + 0.2], [landing.lat, landing.lng - 0.2], [landing.lat + 0.15, landing.lng + 0.15], [landing.lat - 0.15, landing.lng - 0.15], [landing.lat + 0.15, landing.lng - 0.15], [landing.lat - 0.15, landing.lng + 0.15], [landing.lat + 0.3, landing.lng], [landing.lat, landing.lng + 0.3]];\n      const routes = await Promise.all(targets.map(async target => {\n        const res = await axios.get(`${OSRM_URL}/route/v1/driving/${landing.lng},${landing.lat};${target[1]},${target[0]}?overview=full&geometries=polyline`);\n        const coords = polyline.decode(res.data.routes[0].geometry);\n        return coords.map(coord => [coord[0], coord[1]]);\n      }));\n      setAlienRoutes(routes);\n      setAlienPositions(new Array(routes.length).fill(0));\n    };\n    fetchRoutes();\n  }, [landing]);\n  useEffect(() => {\n    if (alienRoutes.length === 0) return;\n    const speed = 50 / 3.6; // 50 קמ\"ש למטר לשנייה\n    const interval = setInterval(() => {\n      setAlienPositions(prev => prev.map((pos, idx) => {\n        if (pos < alienRoutes[idx].length - 1) {\n          return pos + 1;\n        }\n        return pos;\n      }));\n    }, 1000); // עדכון כל שנייה (בערך תואם למהירות 50 קמ\"ש על כבישים)\n\n    return () => clearInterval(interval);\n  }, [alienRoutes]);\n  useEffect(() => {\n    if (alienRoutes.length === 0) return;\n    const geoJSON = {\n      type: \"FeatureCollection\",\n      features: alienRoutes.map((route, idx) => ({\n        type: \"Feature\",\n        geometry: {\n          type: \"LineString\",\n          coordinates: route.map(coord => [coord[1], coord[0]])\n        },\n        properties: {\n          id: idx\n        }\n      }))\n    };\n    axios.post('http://localhost:5000/api/invasion', geoJSON);\n  }, [alienRoutes]);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: center,\n    zoom: 10,\n    style: {\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClickHandler, {\n      setLanding: setLanding\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), landing && /*#__PURE__*/_jsxDEV(Marker, {\n      position: landing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }, this), alienRoutes.map((route, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Polyline, {\n        positions: route,\n        color: \"purple\",\n        dashArray: \"5, 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), alienPositions[idx] < route.length && /*#__PURE__*/_jsxDEV(CircleMarker, {\n        center: route[alienPositions[idx]],\n        radius: 6,\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"bie1Q8BsQ8JSNkn9S7dXp3GpBU0=\");\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ClickHandler\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","CircleMarker","Polyline","useMapEvents","axios","polyline","jsxDEV","_jsxDEV","center","OSRM_URL","ClickHandler","setLanding","_s","click","e","latlng","_c","App","_s2","landing","alienRoutes","setAlienRoutes","alienPositions","setAlienPositions","fetchRoutes","targets","lat","lng","routes","Promise","all","map","target","res","get","coords","decode","data","geometry","coord","Array","length","fill","speed","interval","setInterval","prev","pos","idx","clearInterval","geoJSON","type","features","route","coordinates","properties","id","post","zoom","style","height","children","url","fileName","_jsxFileName","lineNumber","columnNumber","position","Fragment","positions","color","dashArray","radius","_c2","$RefreshReg$"],"sources":["C:/Users/Amos/Desktop/Invasion/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, CircleMarker, Polyline, useMapEvents } from 'react-leaflet';\r\nimport axios from 'axios';\r\nimport polyline from 'polyline';\r\n\r\nconst center = [31.5, 34.8];\r\nconst OSRM_URL = \"https://router.project-osrm.org\";\r\n\r\nconst ClickHandler = ({ setLanding }) => {\r\n  useMapEvents({\r\n    click(e) {\r\n      setLanding(e.latlng);\r\n    },\r\n  });\r\n  return null;\r\n};\r\n\r\nexport default function App() {\r\n  const [landing, setLanding] = useState(null);\r\n  const [alienRoutes, setAlienRoutes] = useState([]);\r\n  const [alienPositions, setAlienPositions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!landing) return;\r\n\r\n    const fetchRoutes = async () => {\r\n      const targets = [\r\n        [landing.lat + 0.2, landing.lng],\r\n        [landing.lat - 0.2, landing.lng],\r\n        [landing.lat, landing.lng + 0.2],\r\n        [landing.lat, landing.lng - 0.2],\r\n        [landing.lat + 0.15, landing.lng + 0.15],\r\n        [landing.lat - 0.15, landing.lng - 0.15],\r\n        [landing.lat + 0.15, landing.lng - 0.15],\r\n        [landing.lat - 0.15, landing.lng + 0.15],\r\n        [landing.lat + 0.3, landing.lng],\r\n        [landing.lat, landing.lng + 0.3],\r\n      ];\r\n\r\n      const routes = await Promise.all(targets.map(async (target) => {\r\n        const res = await axios.get(\r\n          `${OSRM_URL}/route/v1/driving/${landing.lng},${landing.lat};${target[1]},${target[0]}?overview=full&geometries=polyline`\r\n        );\r\n        const coords = polyline.decode(res.data.routes[0].geometry);\r\n        return coords.map(coord => [coord[0], coord[1]]);\r\n      }));\r\n\r\n      setAlienRoutes(routes);\r\n      setAlienPositions(new Array(routes.length).fill(0));\r\n    };\r\n\r\n    fetchRoutes();\r\n  }, [landing]);\r\n\r\n  useEffect(() => {\r\n    if (alienRoutes.length === 0) return;\r\n\r\n    const speed = 50 / 3.6; // 50 קמ\"ש למטר לשנייה\r\n    const interval = setInterval(() => {\r\n      setAlienPositions(prev => prev.map((pos, idx) => {\r\n        if (pos < alienRoutes[idx].length - 1) {\r\n          return pos + 1;\r\n        }\r\n        return pos;\r\n      }));\r\n    }, 1000); // עדכון כל שנייה (בערך תואם למהירות 50 קמ\"ש על כבישים)\r\n\r\n    return () => clearInterval(interval);\r\n  }, [alienRoutes]);\r\n\r\n  useEffect(() => {\r\n    if (alienRoutes.length === 0) return;\r\n\r\n    const geoJSON = {\r\n      type: \"FeatureCollection\",\r\n      features: alienRoutes.map((route, idx) => ({\r\n        type: \"Feature\",\r\n        geometry: {\r\n          type: \"LineString\",\r\n          coordinates: route.map(coord => [coord[1], coord[0]])\r\n        },\r\n        properties: { id: idx },\r\n      })),\r\n    };\r\n\r\n    axios.post('http://localhost:5000/api/invasion', geoJSON);\r\n  }, [alienRoutes]);\r\n\r\n  return (\r\n    <MapContainer center={center} zoom={10} style={{ height: '100vh' }}>\r\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n      <ClickHandler setLanding={setLanding} />\r\n      {landing && <Marker position={landing} />}\r\n      \r\n      {alienRoutes.map((route, idx) => (\r\n        <React.Fragment key={idx}>\r\n          <Polyline positions={route} color=\"purple\" dashArray=\"5, 5\" />\r\n          {alienPositions[idx] < route.length && (\r\n            <CircleMarker\r\n              center={route[alienPositions[idx]]}\r\n              radius={6}\r\n              color=\"red\"\r\n            />\r\n          )}\r\n        </React.Fragment>\r\n      ))}\r\n    </MapContainer>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}