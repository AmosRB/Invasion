{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport getRoute from '../utils/getRoute';\nexport default function AlienManager({\n  aliens,\n  setAliens\n}) {\n  _s();\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const updatedAliens = await Promise.all(aliens.map(async alien => {\n        const newIdx = alien.positionIdx + 1;\n        if (newIdx >= alien.route.length) {\n          const from = alien.route[alien.route.length - 1];\n          const angle = Math.random() * 360;\n          const to = [from[0] + 0.05 * Math.cos(angle * Math.PI / 180), from[1] + 0.05 * Math.sin(angle * Math.PI / 180)];\n          const newRoute = await getRoute(from, to);\n          return {\n            ...alien,\n            route: newRoute,\n            positionIdx: 0\n          };\n        }\n        return {\n          ...alien,\n          positionIdx: newIdx\n        };\n      }));\n      setAliens(updatedAliens);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [aliens]);\n  return null;\n}\n_s(AlienManager, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AlienManager;\nvar _c;\n$RefreshReg$(_c, \"AlienManager\");","map":{"version":3,"names":["useEffect","getRoute","AlienManager","aliens","setAliens","_s","interval","setInterval","updatedAliens","Promise","all","map","alien","newIdx","positionIdx","route","length","from","angle","Math","random","to","cos","PI","sin","newRoute","clearInterval","_c","$RefreshReg$"],"sources":["C:/Users/Amos/Desktop/invasionAll/invasion/frontend/src/components/AlienManager.js"],"sourcesContent":["\nimport { useEffect } from 'react';\nimport getRoute from '../utils/getRoute';\n\nexport default function AlienManager({ aliens, setAliens }) {\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const updatedAliens = await Promise.all(\n        aliens.map(async alien => {\n          const newIdx = alien.positionIdx + 1;\n\n          if (newIdx >= alien.route.length) {\n            const from = alien.route[alien.route.length - 1];\n            const angle = Math.random() * 360;\n            const to = [\n              from[0] + 0.05 * Math.cos(angle * Math.PI / 180),\n              from[1] + 0.05 * Math.sin(angle * Math.PI / 180)\n            ];\n            const newRoute = await getRoute(from, to);\n            return {\n              ...alien,\n              route: newRoute,\n              positionIdx: 0\n            };\n          }\n\n          return {\n            ...alien,\n            positionIdx: newIdx\n          };\n        })\n      );\n      setAliens(updatedAliens);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [aliens]);\n\n  return null;\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,QAAQ,MAAM,mBAAmB;AAExC,eAAe,SAASC,YAAYA,CAAC;EAAEC,MAAM;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC1DL,SAAS,CAAC,MAAM;IACd,MAAMM,QAAQ,GAAGC,WAAW,CAAC,YAAY;MACvC,MAAMC,aAAa,GAAG,MAAMC,OAAO,CAACC,GAAG,CACrCP,MAAM,CAACQ,GAAG,CAAC,MAAMC,KAAK,IAAI;QACxB,MAAMC,MAAM,GAAGD,KAAK,CAACE,WAAW,GAAG,CAAC;QAEpC,IAAID,MAAM,IAAID,KAAK,CAACG,KAAK,CAACC,MAAM,EAAE;UAChC,MAAMC,IAAI,GAAGL,KAAK,CAACG,KAAK,CAACH,KAAK,CAACG,KAAK,CAACC,MAAM,GAAG,CAAC,CAAC;UAChD,MAAME,KAAK,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;UACjC,MAAMC,EAAE,GAAG,CACTJ,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAGE,IAAI,CAACG,GAAG,CAACJ,KAAK,GAAGC,IAAI,CAACI,EAAE,GAAG,GAAG,CAAC,EAChDN,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAGE,IAAI,CAACK,GAAG,CAACN,KAAK,GAAGC,IAAI,CAACI,EAAE,GAAG,GAAG,CAAC,CACjD;UACD,MAAME,QAAQ,GAAG,MAAMxB,QAAQ,CAACgB,IAAI,EAAEI,EAAE,CAAC;UACzC,OAAO;YACL,GAAGT,KAAK;YACRG,KAAK,EAAEU,QAAQ;YACfX,WAAW,EAAE;UACf,CAAC;QACH;QAEA,OAAO;UACL,GAAGF,KAAK;UACRE,WAAW,EAAED;QACf,CAAC;MACH,CAAC,CACH,CAAC;MACDT,SAAS,CAACI,aAAa,CAAC;IAC1B,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMkB,aAAa,CAACpB,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EAEZ,OAAO,IAAI;AACb;AAACE,EAAA,CAnCuBH,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}