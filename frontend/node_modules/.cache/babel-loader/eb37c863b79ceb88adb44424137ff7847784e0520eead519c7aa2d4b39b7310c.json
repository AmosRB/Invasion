{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\Desktop\\\\invasionAll\\\\invasion\\\\frontend\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"https://invasion-api.onrender.com\";\nexport default function Navbar({\n  onActivateCreate\n}) {\n  _s();\n  const [landingCount, setLandingCount] = useState(0);\n  const [alienCount, setAlienCount] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      try {\n        const res = await axios.get(`${API_BASE}/api/invasion`);\n        const features = res.data.features;\n        const landings = features.filter(f => {\n          var _f$properties;\n          return ((_f$properties = f.properties) === null || _f$properties === void 0 ? void 0 : _f$properties.type) === \"landing\";\n        });\n        const aliens = features.filter(f => {\n          var _f$properties2;\n          return ((_f$properties2 = f.properties) === null || _f$properties2 === void 0 ? void 0 : _f$properties2.type) === \"alien\";\n        });\n        setLandingCount(landings.length);\n        setAlienCount(aliens.length);\n      } catch (err) {\n        console.error(\"❌ Failed to fetch invasion stats:\", err.message);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"50px\",\n      backgroundColor: \"black\",\n      color: \"white\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      padding: \"0 20px\",\n      fontFamily: \"sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: \"18px\"\n      },\n      children: \"Invasion Monitor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uD83D\\uDEF8 \", landingCount, \" | \\uD83D\\uDC7D \", alienCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onActivateCreate,\n      style: {\n        background: \"white\",\n        color: \"black\",\n        border: \"none\",\n        padding: \"8px 12px\",\n        borderRadius: \"5px\",\n        cursor: \"pointer\"\n      },\n      children: \"Create Landing \\u26A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Navbar, \"gZoSB/yvGQS/msW1EF39N8nhpy0=\");\n_c = Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_BASE","Navbar","onActivateCreate","_s","landingCount","setLandingCount","alienCount","setAlienCount","interval","setInterval","res","get","features","data","landings","filter","f","_f$properties","properties","type","aliens","_f$properties2","length","err","console","error","message","clearInterval","style","height","backgroundColor","color","display","alignItems","justifyContent","padding","fontFamily","children","fontWeight","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onClick","background","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Amos/Desktop/invasionAll/invasion/frontend/src/components/Navbar.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_BASE = \"https://invasion-api.onrender.com\";\r\n\r\nexport default function Navbar({ onActivateCreate }) {\r\n  const [landingCount, setLandingCount] = useState(0);\r\n  const [alienCount, setAlienCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      try {\r\n        const res = await axios.get(`${API_BASE}/api/invasion`);\r\n        const features = res.data.features;\r\n        const landings = features.filter(f => f.properties?.type === \"landing\");\r\n        const aliens = features.filter(f => f.properties?.type === \"alien\");\r\n        setLandingCount(landings.length);\r\n        setAlienCount(aliens.length);\r\n      } catch (err) {\r\n        console.error(\"❌ Failed to fetch invasion stats:\", err.message);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{\r\n      height: \"50px\",\r\n      backgroundColor: \"black\",\r\n      color: \"white\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-between\",\r\n      padding: \"0 20px\",\r\n      fontFamily: \"sans-serif\"\r\n    }}>\r\n      <div style={{ fontWeight: \"bold\", fontSize: \"18px\" }}>\r\n        Invasion Monitor\r\n      </div>\r\n      <div>\r\n        🛸 {landingCount} | 👽 {alienCount}\r\n      </div>\r\n      <button\r\n        onClick={onActivateCreate}\r\n        style={{\r\n          background: \"white\",\r\n          color: \"black\",\r\n          border: \"none\",\r\n          padding: \"8px 12px\",\r\n          borderRadius: \"5px\",\r\n          cursor: \"pointer\"\r\n        }}\r\n      >\r\n        Create Landing ⚡\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}