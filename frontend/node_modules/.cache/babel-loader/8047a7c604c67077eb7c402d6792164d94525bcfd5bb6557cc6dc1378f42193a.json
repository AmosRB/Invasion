{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\Desktop\\\\Invasion\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// ... (אותו import כמו שהיה לך למעלה)\n\nfunction MainInvasionMap() {\n  _s();\n  const [landing, setLanding] = useState(null);\n  const [aliens, setAliens] = useState([]);\n  const getRoute = async (from, to) => {\n    const res = await axios.get(`${API_BASE}/api/route?fromLat=${from[0]}&fromLng=${from[1]}&toLat=${to[0]}&toLng=${to[1]}`);\n    return polyline.decode(res.data.routes[0].geometry).map(coord => [coord[0], coord[1]]);\n  };\n  useEffect(() => {\n    if (!landing) return;\n    const createAliens = async () => {\n      const directions = [0, 45, 90, 135, 180, 225, 270, 315];\n      const alienPromises = directions.map(async angle => {\n        const rad = angle * (Math.PI / 180);\n        const target = [landing.lat + 0.05 * Math.cos(rad), landing.lng + 0.05 * Math.sin(rad)];\n        const route = await getRoute([landing.lat, landing.lng], target);\n        return {\n          route,\n          positionIdx: 0\n        };\n      });\n      const aliensCreated = await Promise.all(alienPromises);\n      setAliens(aliensCreated);\n    };\n    createAliens();\n  }, [landing]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const updateAliens = async () => {\n        const updated = await Promise.all(aliens.map(async (alien, idx) => {\n          let newIdx = alien.positionIdx + 1;\n          if (newIdx >= alien.route.length) {\n            const currentPos = alien.route[alien.route.length - 1];\n            let newRoute = await getRoute(currentPos, [currentPos[0] + (Math.random() - 0.5) / 10, currentPos[1] + (Math.random() - 0.5) / 10]);\n            if (!newRoute || newRoute.length < 2) {\n              newRoute = alien.route.slice().reverse();\n            }\n            return {\n              route: newRoute,\n              positionIdx: 0\n            };\n          }\n          return {\n            ...alien,\n            positionIdx: newIdx\n          };\n        }));\n        setAliens(updated);\n      };\n      updateAliens();\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [aliens]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!landing || aliens.length === 0) return;\n      const geoJSON = {\n        type: \"FeatureCollection\",\n        features: [{\n          type: \"Feature\",\n          geometry: {\n            type: \"Point\",\n            coordinates: [landing.lng, landing.lat]\n          },\n          properties: {\n            type: \"landing\"\n          }\n        }, ...aliens.map((alien, idx) => ({\n          type: \"Feature\",\n          geometry: {\n            type: \"Point\",\n            coordinates: [alien.route[alien.positionIdx][1], alien.route[alien.positionIdx][0]]\n          },\n          properties: {\n            type: \"alien\",\n            id: idx + 1\n          }\n        }))]\n      };\n      axios.post(`${API_BASE}/api/update-invasion`, geoJSON);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [landing, aliens]);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: center,\n    zoom: 10,\n    style: {\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClickHandler, {\n      setLanding: setLanding\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), landing && /*#__PURE__*/_jsxDEV(Marker, {\n      position: landing,\n      icon: landingIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }, this), aliens.map((alien, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Polyline, {\n        positions: alien.route,\n        color: \"purple\",\n        dashArray: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: alien.route[alien.positionIdx],\n        icon: alienIcon(idx + 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(MainInvasionMap, \"eBSoVp/oM4YT3I3Vwxm7de+dQOE=\");\n_c = MainInvasionMap;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(MainInvasionMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/viewer\",\n        element: /*#__PURE__*/_jsxDEV(Viewer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"MainInvasionMap\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["MainInvasionMap","_s","landing","setLanding","useState","aliens","setAliens","getRoute","from","to","res","axios","get","API_BASE","polyline","decode","data","routes","geometry","map","coord","useEffect","createAliens","directions","alienPromises","angle","rad","Math","PI","target","lat","cos","lng","sin","route","positionIdx","aliensCreated","Promise","all","interval","setInterval","updateAliens","updated","alien","idx","newIdx","length","currentPos","newRoute","random","slice","reverse","clearInterval","geoJSON","type","features","coordinates","properties","id","post","_jsxDEV","MapContainer","center","zoom","style","height","children","TileLayer","url","fileName","_jsxFileName","lineNumber","columnNumber","ClickHandler","Marker","position","icon","landingIcon","React","Fragment","Polyline","positions","color","dashArray","alienIcon","_c","App","Router","Routes","Route","path","element","Viewer","_c2","$RefreshReg$"],"sources":["C:/Users/Amos/Desktop/Invasion/frontend/src/App.js"],"sourcesContent":["// ... (אותו import כמו שהיה לך למעלה)\r\n\r\nfunction MainInvasionMap() {\r\n  const [landing, setLanding] = useState(null);\r\n  const [aliens, setAliens] = useState([]);\r\n\r\n  const getRoute = async (from, to) => {\r\n    const res = await axios.get(\r\n      `${API_BASE}/api/route?fromLat=${from[0]}&fromLng=${from[1]}&toLat=${to[0]}&toLng=${to[1]}`\r\n    );\r\n    return polyline\r\n      .decode(res.data.routes[0].geometry)\r\n      .map(coord => [coord[0], coord[1]]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!landing) return;\r\n    const createAliens = async () => {\r\n      const directions = [0, 45, 90, 135, 180, 225, 270, 315];\r\n      const alienPromises = directions.map(async (angle) => {\r\n        const rad = angle * (Math.PI / 180);\r\n        const target = [\r\n          landing.lat + 0.05 * Math.cos(rad),\r\n          landing.lng + 0.05 * Math.sin(rad),\r\n        ];\r\n        const route = await getRoute([landing.lat, landing.lng], target);\r\n        return {\r\n          route,\r\n          positionIdx: 0,\r\n        };\r\n      });\r\n      const aliensCreated = await Promise.all(alienPromises);\r\n      setAliens(aliensCreated);\r\n    };\r\n    createAliens();\r\n  }, [landing]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const updateAliens = async () => {\r\n        const updated = await Promise.all(\r\n          aliens.map(async (alien, idx) => {\r\n            let newIdx = alien.positionIdx + 1;\r\n            if (newIdx >= alien.route.length) {\r\n              const currentPos = alien.route[alien.route.length - 1];\r\n              let newRoute = await getRoute(currentPos, [\r\n                currentPos[0] + (Math.random() - 0.5) / 10,\r\n                currentPos[1] + (Math.random() - 0.5) / 10,\r\n              ]);\r\n              if (!newRoute || newRoute.length < 2) {\r\n                newRoute = alien.route.slice().reverse();\r\n              }\r\n              return { route: newRoute, positionIdx: 0 };\r\n            }\r\n            return { ...alien, positionIdx: newIdx };\r\n          })\r\n        );\r\n        setAliens(updated);\r\n      };\r\n      updateAliens();\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [aliens]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (!landing || aliens.length === 0) return;\r\n      const geoJSON = {\r\n        type: \"FeatureCollection\",\r\n        features: [\r\n          {\r\n            type: \"Feature\",\r\n            geometry: {\r\n              type: \"Point\",\r\n              coordinates: [landing.lng, landing.lat],\r\n            },\r\n            properties: { type: \"landing\" },\r\n          },\r\n          ...aliens.map((alien, idx) => ({\r\n            type: \"Feature\",\r\n            geometry: {\r\n              type: \"Point\",\r\n              coordinates: [\r\n                alien.route[alien.positionIdx][1],\r\n                alien.route[alien.positionIdx][0],\r\n              ],\r\n            },\r\n            properties: { type: \"alien\", id: idx + 1 },\r\n          })),\r\n        ],\r\n      };\r\n      axios.post(`${API_BASE}/api/update-invasion`, geoJSON);\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [landing, aliens]);\r\n\r\n  return (\r\n    <MapContainer center={center} zoom={10} style={{ height: '100vh' }}>\r\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n      <ClickHandler setLanding={setLanding} />\r\n      {landing && <Marker position={landing} icon={landingIcon} />}\r\n      {aliens.map((alien, idx) => (\r\n        <React.Fragment key={idx}>\r\n          <Polyline positions={alien.route} color=\"purple\" dashArray=\"3\" />\r\n          <Marker\r\n            position={alien.route[alien.positionIdx]}\r\n            icon={alienIcon(idx + 1)}\r\n          />\r\n        </React.Fragment>\r\n      ))}\r\n    </MapContainer>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<MainInvasionMap />} />\r\n        <Route path=\"/viewer\" element={<Viewer />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}